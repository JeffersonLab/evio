<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jlab.coda</groupId>
  <artifactId>jevio</artifactId>
  <version>6.0.0</version>
  <name>Jefferson Lab EVIO Java Library (JEVIO)</name>
  <description>Java library for EVIO (Event Input/Output)</description>
  <packaging>jar</packaging>

  <!-- SOFTWARE VERSIONS USED -->
  <properties>
    <!-- Set Java version -->
    <java.version>15</java.version> <!-- Compatibility: if Java 8 desired, put 1.8 here (not 8)   -->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!-- Dependencies (versions for jars we'll need to bring in)  -->
    <lz4.version>1.8.0</lz4.version>
    <disruptor.version>4.0.0</disruptor.version> <!-- Need from JLab source (not lmax default) -->
    <!-- Other misc properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.jars.dir>${pom.basedir}/java/jars</java.jars.dir>
  </properties>


  <!-- Add local folder to repositories mvn searches -->
  <repositories>
    <repository>
      <id>local-disruptor</id>
      <url>file://${project.basedir}/java/jars</url>
      <releases><enabled>true</enabled></releases>
    </repository>
  </repositories>

  <dependencies>
    <!-- LZ4 compression library -->
    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <version>${lz4.version}</version>
    </dependency>
    <!-- LMAX Disruptor (for ring buffer concurrency) -->
    <dependency>
      <groupId>com.lmax</groupId> 
      <artifactId>disruptor</artifactId>
      <version>${disruptor.version}</version>
      </dependency>
  </dependencies>


<build>
 <sourceDirectory>${project.basedir}/java</sourceDirectory>
  <plugins>

    <!-- Add sources in non-standard folder setup -->
    <plugin>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>build-helper-maven-plugin</artifactId>
      <version>3.6.0</version>
      <executions>
        <execution>
          <id>add-jevio-tests</id>
          <phase>generate-test-sources</phase>
          <goals>
            <goal>add-test-source</goal>
          </goals>
          <configuration>
            <sources>
              <source>java/org/jlab/coda/jevio/test</source>
            </sources>
          </configuration>
        </execution>
      </executions>
    </plugin>

    <!-- Make the fat jar file -->
    <plugin>
      <artifactId>maven-assembly-plugin</artifactId>
      <version>3.6.0</version>           <!-- upgrade to latest -->
      
      <configuration>
        <!-- <appendAssemblyId>false</appendAssemblyId> -->
        <descriptorRefs>
          <descriptorRef>jar-with-dependencies</descriptorRef>
        </descriptorRefs>        
        <assembly>
          <id>jar-with-dependencies</id>
          <formats><format>jar</format></formats>
          <includeBaseDirectory>false</includeBaseDirectory>
          <dependencySets>
            <dependencySet>
              <scope>runtime</scope>
              <unpack>true</unpack>
            </dependencySet>
            <dependencySet>
              <scope>system</scope>
              <useProjectArtifact>true</useProjectArtifact>
              <unpack>false</unpack>
              <outputDirectory>/</outputDirectory>
            </dependencySet>
          </dependencySets>
        </assembly>
      </configuration>
      <executions>
        <execution>
          <id>make-assembly</id>
          <phase>package</phase>
          <goals>
            <goal>single</goal>
          </goals>
        </execution>
      </executions>
    </plugin>

    <!--  Make Surefire compile & (optionally) ignore JUnit‑style tests -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.0.0-M7</version>
      <configuration>
        <!-- pick up any *Test.java, even if they have no @Test annotations -->
        <includes>
          <include>**/**.java</include>
        </includes>
        <!-- don’t fail the build if no JUnit tests are found -->
        <testFailureIgnore>true</testFailureIgnore>
      </configuration>
    </plugin>


  </plugins>

</build>

</project>
