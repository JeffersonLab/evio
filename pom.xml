<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.jlab.coda</groupId>
  <artifactId>jevio</artifactId>
  <version>6.1.0</version> <!-- JEVIO version tag -->
  <name>Jefferson Lab EVIO Java Library (JEVIO)</name>
  <description>Java library for EVIO (Event Input/Output)</description>
  <packaging>jar</packaging>

  <!-- MAVEN CONVENTIONS -->
  <!-- https://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html -->

  <!-- SOFTWARE VERSIONS USED -->
  <properties>
    <!-- Set Java version -->
    <java.version>17</java.version> <!-- Compatibility: if Java 8 desired, put 1.8 here (not 8)   -->
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <!-- Dependencies (versions for jars we'll need to bring in)  -->
    <lz4.version>1.8.0</lz4.version>
    <disruptor.version>4.0.0</disruptor.version> <!-- Need from JLab source (not lmax default) -->
    <!-- Other misc properties -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.jars.dir>${pom.basedir}/java/jars</java.jars.dir>
  </properties>


<!-- Add local folder to repositories mvn searches -->
  <repositories>
    <repository>
      <id>local-disruptor</id>
      <url>file://${project.basedir}/java/jars</url>
      <releases><enabled>true</enabled></releases>
    </repository>
  </repositories>

  <dependencies>
    <!-- LZ4 compression library -->
    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <version>${lz4.version}</version>
    </dependency>
    <!-- LMAX Disruptor (for ring buffer concurrency) -->
    <!-- WARNING: we're assuming it finds the java/jars folder with the JLab forked version -->
    <!--          else it will try to download from generic maven repo and fail!  -->
    <dependency>
      <groupId>com.lmax</groupId> 
      <artifactId>disruptor</artifactId>
      <version>${disruptor.version}</version>
      </dependency>
    <!-- JUnit 5 (for testing) -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.9.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


<build>
  <plugins>

    <!-- Install disruptor jar  -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-install-plugin</artifactId>
      <version>3.1.4</version>  
      <executions>
        <execution>
          <id>install-local-disruptor</id>
          <phase>initialize</phase>
          <goals>
            <goal>install-file</goal>
          </goals>
          <configuration>
            <file>${project.basedir}/java/jars/disruptor-${disruptor.version}.jar</file>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
            <packaging>jar</packaging>
            <generatePom>true</generatePom>
          </configuration>
        </execution>
      </executions>
    </plugin>

    <!-- Make the fat jar file -->
    <plugin>
      <artifactId>maven-assembly-plugin</artifactId>
      <version>3.6.0</version> 
      <configuration>
        <descriptorRefs>
          <descriptorRef>jar-with-dependencies</descriptorRef>
        </descriptorRefs>        
        <assembly>
          <id>jar-with-dependencies</id>
          <formats><format>jar</format></formats>
          <includeBaseDirectory>false</includeBaseDirectory>
          <dependencySets>
            <dependencySet>
              <scope>runtime</scope>
              <unpack>true</unpack>
            </dependencySet>
            <dependencySet>
              <scope>system</scope>
              <useProjectArtifact>true</useProjectArtifact>
              <unpack>false</unpack>
              <outputDirectory>/</outputDirectory>
            </dependencySet>
          </dependencySets>
        </assembly>
      </configuration>
      <executions>
        <execution>
          <id>make-assembly</id>
          <phase>package</phase>
          <goals>
            <goal>single</goal>
          </goals>
        </execution>
      </executions>
    </plugin>

    <!--  Make Surefire compile & (optionally) ignore JUnit‑style tests -->
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.0.0-M7</version>
      <configuration>
        <!-- pick up any *Test.java, even if they have no @Test annotations -->
        <includes>
          <include>**/**.java</include>
        </includes>
        <!-- don’t fail the build if no JUnit tests are found -->
        <testFailureIgnore>true</testFailureIgnore>
      </configuration>
    </plugin>

    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.2</version>
        <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <reportOutputDirectory>doc/javadoc</reportOutputDirectory>
        </configuration> 
    </plugin>

  </plugins>

</build>

</project>
