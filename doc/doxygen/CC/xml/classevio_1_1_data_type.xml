<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classevio_1_1_data_type" kind="class" language="C++" prot="public">
    <compoundname>evio::DataType</compoundname>
    <includes refid="_data_type_8h" local="no">DataType.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::UNKNOWN32</definition>
        <argsstring></argsstring>
        <name>UNKNOWN32</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x0, &quot;UNKNOWN32&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unknown data type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="36" column="31" bodyfile="src/libsrc/DataType.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1ab594570d76a48584ae27c5e2276b3c04" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::UINT32</definition>
        <argsstring></argsstring>
        <name>UINT32</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x1, &quot;UINT32&quot;, 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsigned 32 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="37" column="31" bodyfile="src/libsrc/DataType.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a15212317494206aed89652808e36ffcb" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::FLOAT32</definition>
        <argsstring></argsstring>
        <name>FLOAT32</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x2, &quot;FLOAT32&quot;, 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>32 bit float. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="38" column="31" bodyfile="src/libsrc/DataType.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a44ebcac2851a8e66b41605ab55bc6708" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::CHARSTAR8</definition>
        <argsstring></argsstring>
        <name>CHARSTAR8</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x3, &quot;CHARSTAR8&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ASCII characters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="39" column="31" bodyfile="src/libsrc/DataType.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a227fb12c5f747c91239e4d305fa83447" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::SHORT16</definition>
        <argsstring></argsstring>
        <name>SHORT16</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x4, &quot;SHORT16&quot;, 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>16 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="40" column="31" bodyfile="src/libsrc/DataType.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1aa4dc041c0f0796a4b7dd12d11a9c325a" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::USHORT16</definition>
        <argsstring></argsstring>
        <name>USHORT16</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x5, &quot;USHORT16&quot;, 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsigned 16 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="41" column="31" bodyfile="src/libsrc/DataType.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a9a9803199ba7b5236f9fb5ccaacc9c6d" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::CHAR8</definition>
        <argsstring></argsstring>
        <name>CHAR8</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x6, &quot;CHAR8&quot;, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>8 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="42" column="31" bodyfile="src/libsrc/DataType.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a1d561abba7301ebf74fefad8b29fa8ae" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::UCHAR8</definition>
        <argsstring></argsstring>
        <name>UCHAR8</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x7, &quot;UCHAR8&quot;, 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsigned 8 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="43" column="31" bodyfile="src/libsrc/DataType.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a018e0280b01ac441c63dc529f391c812" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::DOUBLE64</definition>
        <argsstring></argsstring>
        <name>DOUBLE64</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x8, &quot;DOUBLE64&quot;, 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>64 bit double. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="44" column="31" bodyfile="src/libsrc/DataType.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a0ad3467f252ad341a3f630f0210bc9e1" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::LONG64</definition>
        <argsstring></argsstring>
        <name>LONG64</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x9, &quot;LONG64&quot;, 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>64 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="45" column="31" bodyfile="src/libsrc/DataType.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a0f556bae625e41a9adc3bae9949112d3" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::ULONG64</definition>
        <argsstring></argsstring>
        <name>ULONG64</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xa, &quot;ULONG64&quot;, 8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unsigned 64 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="46" column="31" bodyfile="src/libsrc/DataType.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1ae23b05542b144e3b7d72628280532195" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::INT32</definition>
        <argsstring></argsstring>
        <name>INT32</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xb, &quot;INT32&quot;, 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>32 bit int. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="47" column="31" bodyfile="src/libsrc/DataType.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a96276904feb345922470078df8b5e5c7" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::TAGSEGMENT</definition>
        <argsstring></argsstring>
        <name>TAGSEGMENT</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xc, &quot;TAGSEGMENT&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tag segment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="48" column="31" bodyfile="src/libsrc/DataType.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a84e08dfdd193f7c1b336dc06b222fa73" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::ALSOSEGMENT</definition>
        <argsstring></argsstring>
        <name>ALSOSEGMENT</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xd, &quot;ALSOSEGMENT&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Segment alternate value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="49" column="31" bodyfile="src/libsrc/DataType.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1ab38996675c5240d92a1593fac3600cdc" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::ALSOBANK</definition>
        <argsstring></argsstring>
        <name>ALSOBANK</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xe, &quot;ALSOBANK&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bank alternate value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="50" column="31" bodyfile="src/libsrc/DataType.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a9790e6d2d964cd17518b510cade71013" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::COMPOSITE</definition>
        <argsstring></argsstring>
        <name>COMPOSITE</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0xf, &quot;COMPOSITE&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Composite data type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="51" column="31" bodyfile="src/libsrc/DataType.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a9abb7776dd6a75467243aa15eded907d" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::BANK</definition>
        <argsstring></argsstring>
        <name>BANK</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x10, &quot;BANK&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Bank. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="52" column="31" bodyfile="src/libsrc/DataType.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1aa696a1e106a458b808fbb6892432ae59" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::SEGMENT</definition>
        <argsstring></argsstring>
        <name>SEGMENT</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x20, &quot;SEGMENT&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Segment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="53" column="31" bodyfile="src/libsrc/DataType.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a7e55a4c8ee5dd0e7b0d308ee9a2ae75d" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::HOLLERIT</definition>
        <argsstring></argsstring>
        <name>HOLLERIT</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x21, &quot;HOLLERIT&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In composite data, Hollerit type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="57" column="31" bodyfile="src/libsrc/DataType.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a594dff401ed927c25cae6147977bf0b4" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::NVALUE</definition>
        <argsstring></argsstring>
        <name>NVALUE</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x22, &quot;NVALUE&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In composite data, N value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="58" column="31" bodyfile="src/libsrc/DataType.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a8aeecc0417a67fb853c0e7508bc890f5" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::nVALUE</definition>
        <argsstring></argsstring>
        <name>nVALUE</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x23, &quot;nVALUE&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In composite data, n value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="59" column="31" bodyfile="src/libsrc/DataType.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a5385213a97280d02166d3a8949374229" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::mVALUE</definition>
        <argsstring></argsstring>
        <name>mVALUE</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x24, &quot;mVALUE&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In composite data, m value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="60" column="31" bodyfile="src/libsrc/DataType.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a64b4f4f0ccc080ba2d28040f49cfef3c" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>const DataType evio::DataType::NOT_A_VALID_TYPE</definition>
        <argsstring></argsstring>
        <name>NOT_A_VALID_TYPE</name>
        <initializer>= <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref>(0x30, &quot;INVALID&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Not a valid data type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="63" column="31" bodyfile="src/libsrc/DataType.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classevio_1_1_data_type_1a43d7483fa26043377eeb1b57a20138d7" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t evio::DataType::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Value of this data type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="69" column="18" bodyfile="src/libsrc/DataType.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a08e28b82940bb598029b0070bea1e9af" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string evio::DataType::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of this data type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="72" column="21" bodyfile="src/libsrc/DataType.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1a207a87cf653aae15a60da06a2b1ab1f4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int evio::DataType::bytes</definition>
        <argsstring></argsstring>
        <name>bytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bytes this data type consumes (if relevant, else = -1). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="75" column="13" bodyfile="src/libsrc/DataType.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classevio_1_1_data_type_1a0dc4d538981e2cf792738c9d295e0ed9" prot="private" static="yes" mutable="no">
        <type><ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>DataType evio::DataType::intToType</definition>
        <argsstring>[37]</argsstring>
        <name>intToType</name>
        <initializer>=
            {<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>,
             <ref refid="classevio_1_1_data_type_1ab594570d76a48584ae27c5e2276b3c04" kindref="member">DataType::UINT32</ref>,
             <ref refid="classevio_1_1_data_type_1a15212317494206aed89652808e36ffcb" kindref="member">DataType::FLOAT32</ref>,
             <ref refid="classevio_1_1_data_type_1a44ebcac2851a8e66b41605ab55bc6708" kindref="member">DataType::CHARSTAR8</ref>,
             <ref refid="classevio_1_1_data_type_1a227fb12c5f747c91239e4d305fa83447" kindref="member">DataType::SHORT16</ref>,
             <ref refid="classevio_1_1_data_type_1aa4dc041c0f0796a4b7dd12d11a9c325a" kindref="member">DataType::USHORT16</ref>,
             <ref refid="classevio_1_1_data_type_1a9a9803199ba7b5236f9fb5ccaacc9c6d" kindref="member">DataType::CHAR8</ref>,
             <ref refid="classevio_1_1_data_type_1a1d561abba7301ebf74fefad8b29fa8ae" kindref="member">DataType::UCHAR8</ref>,
             <ref refid="classevio_1_1_data_type_1a018e0280b01ac441c63dc529f391c812" kindref="member">DataType::DOUBLE64</ref>,
             <ref refid="classevio_1_1_data_type_1a0ad3467f252ad341a3f630f0210bc9e1" kindref="member">DataType::LONG64</ref>,
             <ref refid="classevio_1_1_data_type_1a0f556bae625e41a9adc3bae9949112d3" kindref="member">DataType::ULONG64</ref>,
             <ref refid="classevio_1_1_data_type_1ae23b05542b144e3b7d72628280532195" kindref="member">DataType::INT32</ref>,
             <ref refid="classevio_1_1_data_type_1a96276904feb345922470078df8b5e5c7" kindref="member">DataType::TAGSEGMENT</ref>,
             <ref refid="classevio_1_1_data_type_1a84e08dfdd193f7c1b336dc06b222fa73" kindref="member">DataType::ALSOSEGMENT</ref>,
             <ref refid="classevio_1_1_data_type_1ab38996675c5240d92a1593fac3600cdc" kindref="member">DataType::ALSOBANK</ref>,
             <ref refid="classevio_1_1_data_type_1a9790e6d2d964cd17518b510cade71013" kindref="member">DataType::COMPOSITE</ref>,
             <ref refid="classevio_1_1_data_type_1a9abb7776dd6a75467243aa15eded907d" kindref="member">DataType::BANK</ref>,

             <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>,
             <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>,
             <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>, <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref>,

             <ref refid="classevio_1_1_data_type_1aa696a1e106a458b808fbb6892432ae59" kindref="member">DataType::SEGMENT</ref>,
             <ref refid="classevio_1_1_data_type_1a7e55a4c8ee5dd0e7b0d308ee9a2ae75d" kindref="member">DataType::HOLLERIT</ref>,
             <ref refid="classevio_1_1_data_type_1a594dff401ed927c25cae6147977bf0b4" kindref="member">DataType::NVALUE</ref>,
             <ref refid="classevio_1_1_data_type_1a8aeecc0417a67fb853c0e7508bc890f5" kindref="member">DataType::nVALUE</ref>,
             <ref refid="classevio_1_1_data_type_1a5385213a97280d02166d3a8949374229" kindref="member">DataType::mVALUE</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fast way to convert integer values into <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="80" column="25" bodyfile="src/libsrc/DataType.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classevio_1_1_data_type_1aa282946ea01e3cb1d3ca2a6292b40c92" prot="private" static="yes" mutable="no">
        <type>std::string</type>
        <definition>std::string evio::DataType::names</definition>
        <argsstring>[37]</argsstring>
        <name>names</name>
        <initializer>=
            {&quot;UNKNOWN32&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1ab594570d76a48584ae27c5e2276b3c04" kindref="member">UINT32</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a15212317494206aed89652808e36ffcb" kindref="member">FLOAT32</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a44ebcac2851a8e66b41605ab55bc6708" kindref="member">CHARSTAR8</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a227fb12c5f747c91239e4d305fa83447" kindref="member">SHORT16</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1aa4dc041c0f0796a4b7dd12d11a9c325a" kindref="member">USHORT16</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a9a9803199ba7b5236f9fb5ccaacc9c6d" kindref="member">CHAR8</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a1d561abba7301ebf74fefad8b29fa8ae" kindref="member">UCHAR8</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a018e0280b01ac441c63dc529f391c812" kindref="member">DOUBLE64</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a0ad3467f252ad341a3f630f0210bc9e1" kindref="member">LONG64</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a0f556bae625e41a9adc3bae9949112d3" kindref="member">ULONG64</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1ae23b05542b144e3b7d72628280532195" kindref="member">INT32</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a96276904feb345922470078df8b5e5c7" kindref="member">TAGSEGMENT</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a84e08dfdd193f7c1b336dc06b222fa73" kindref="member">ALSOSEGMENT</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1ab38996675c5240d92a1593fac3600cdc" kindref="member">ALSOBANK</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a9790e6d2d964cd17518b510cade71013" kindref="member">COMPOSITE</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a9abb7776dd6a75467243aa15eded907d" kindref="member">BANK</ref>&quot;,

                    
             &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;, &quot;<ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">UNKNOWN32</ref>&quot;,

             &quot;<ref refid="classevio_1_1_data_type_1aa696a1e106a458b808fbb6892432ae59" kindref="member">SEGMENT</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a7e55a4c8ee5dd0e7b0d308ee9a2ae75d" kindref="member">HOLLERIT</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a594dff401ed927c25cae6147977bf0b4" kindref="member">NVALUE</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a8aeecc0417a67fb853c0e7508bc890f5" kindref="member">nVALUE</ref>&quot;,
             &quot;<ref refid="classevio_1_1_data_type_1a5385213a97280d02166d3a8949374229" kindref="member">mVALUE</ref>&quot;
            }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store a name for each <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="83" column="28" bodyfile="src/libsrc/DataType.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classevio_1_1_data_type_1a4b5fb0e053c168e8e08255ec49eaba7c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>evio::DataType::DataType</definition>
        <argsstring>(uint32_t val, std::string name, int byteLen=-1)</argsstring>
        <name>DataType</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byteLen</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>int value of this <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name (string representation) of this <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byteLen</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes this type takes (if relevant). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="91" column="9" bodyfile="src/libsrc/DataType.h" bodystart="91" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classevio_1_1_data_type_1ad49c0e00ce28f150c91cad724634c5d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> &amp;</type>
        <definition>static const DataType&amp; evio::DataType::getDataType</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>getDataType</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the object from the integer value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matching <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="100" column="32" bodyfile="src/libsrc/DataType.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a65d3f882e19a958e2ad6a05aacb4e67b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string evio::DataType::getName</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>getName</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name from the integer value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name, or <computeroutput>null</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="110" column="28" bodyfile="src/libsrc/DataType.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a5e28fed061292b3f1fa35011ed54ccbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref></type>
        <definition>static DataType evio::DataType::valueOf</definition>
        <argsstring>(std::string const &amp;typeName)</argsstring>
        <name>valueOf</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the enum constant from a string. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>typeName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> to obtain. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> object associated with the given type name, or <ref refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" kindref="member">DataType::UNKNOWN32</ref> if there&apos;s no match. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="121" column="25" bodyfile="src/libsrc/DataType.h" bodystart="121" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1add9555ba07e3b576ff8c395d7687425c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool evio::DataType::isStructure</definition>
        <argsstring>(uint32_t dataType)</argsstring>
        <name>isStructure</name>
        <param>
          <type>uint32_t</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to see if the given integer arg represents a data type which is a structure (a container). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to one of the structure types: BANK, SEGMENT, TAGSEGMENT, ALSOBANK, or ALSOSEGMENT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="139" column="21" bodyfile="src/libsrc/DataType.h" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a43fa2881329c62cf42020bbc9b786106" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool evio::DataType::isBank</definition>
        <argsstring>(uint32_t dataType)</argsstring>
        <name>isBank</name>
        <param>
          <type>uint32_t</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to see if the given integer arg represents a BANK. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to a BANK. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="150" column="21" bodyfile="src/libsrc/DataType.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a8c5bd7f199a30c163c274be1f51d6da3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool evio::DataType::isSegment</definition>
        <argsstring>(uint32_t dataType)</argsstring>
        <name>isSegment</name>
        <param>
          <type>uint32_t</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to see if the given integer arg represents a SEGMENT. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to a SEGMENT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="159" column="21" bodyfile="src/libsrc/DataType.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1afafccc742f056bb1740cc7dd31a1955f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool evio::DataType::isTagSegment</definition>
        <argsstring>(uint32_t dataType)</argsstring>
        <name>isTagSegment</name>
        <param>
          <type>uint32_t</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to see if the given integer arg represents a TAGSEGMENT. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>the int value to match. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to a TAGSEGMENT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="168" column="21" bodyfile="src/libsrc/DataType.h" bodystart="168" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classevio_1_1_data_type_1a725fbb9d81257ac84d8ff6111d6f06b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; evio::DataType::getName</definition>
        <argsstring>() const</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name associated with this data type. <simplesect kind="return"><para>name associated with this data type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="178" column="28" bodyfile="src/libsrc/DataType.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a69fcde1e86a8cbad2a2ab213d070f3c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t evio::DataType::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the integer value associated with this data type. <simplesect kind="return"><para>integer value associated with this data type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="184" column="18" bodyfile="src/libsrc/DataType.h" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a4b55bfb1a25acc690c9456f0869c4b49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string evio::DataType::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string which is usually the same as the name of the enumerated value, except in the cases of ALSOSEGMENT and ALSOBANK which return SEGMENT and BANK respectively.</para>
<para><simplesect kind="return"><para>name of the enumerated type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="193" column="21" bodyfile="src/libsrc/DataType.h" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1ad398e7fb1f5cd94dd7866c0ca2322644" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::isStructure</definition>
        <argsstring>() const</argsstring>
        <name>isStructure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience routine to see if &quot;this&quot; data type is a structure (a container.) <simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to one of the structure types: BANK, SEGMENT, TAGSEGMENT, ALSOBANK, or ALSOSEGMENT. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="205" column="14" bodyfile="src/libsrc/DataType.h" bodystart="205" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1ad7e6fde70cb5eae2530bee8b2394977f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::isBank</definition>
        <argsstring>() const</argsstring>
        <name>isBank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience routine to see if &quot;this&quot; data type is a bank structure. <simplesect kind="return"><para><computeroutput>true</computeroutput> if this data type corresponds to a bank structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="217" column="14" bodyfile="src/libsrc/DataType.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1afa6b14e9cdc06daf1ad89221cd7c572b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::isSegment</definition>
        <argsstring>() const</argsstring>
        <name>isSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience routine to see if &quot;this&quot; data type is a segment structure. <simplesect kind="return"><para><computeroutput>true</computeroutput> if this data type corresponds to a bank structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="223" column="14" bodyfile="src/libsrc/DataType.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1ae7d5a621c748b2bb68cf9cb8f7721036" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::isTagSegment</definition>
        <argsstring>() const</argsstring>
        <name>isTagSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience routine to see if &quot;this&quot; data type is a tagsegment structure. <simplesect kind="return"><para><computeroutput>true</computeroutput> if this data type corresponds to a tagsegment structure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="229" column="14" bodyfile="src/libsrc/DataType.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a4a923d8f0249df81420fa8d21000efcb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::isInteger</definition>
        <argsstring>() const</argsstring>
        <name>isInteger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convenience method to see if &quot;this&quot; data type is an integer of some kind - either 8, 16, 32, or 64 bits worth. <simplesect kind="return"><para><computeroutput>true</computeroutput> if the data type corresponds to an integer type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="236" column="14" bodyfile="src/libsrc/DataType.h" bodystart="236" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1a0a61f0f28a505939e06e84c1e6e51daf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int evio::DataType::getBytes</definition>
        <argsstring>() const</argsstring>
        <name>getBytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of bytes this data type takes (if relevant). <simplesect kind="return"><para>the number of bytes this data type takes (if relevant). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="251" column="13" bodyfile="src/libsrc/DataType.h" bodystart="251" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1aa6511be49823fba1f646a1f061edb148" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::operator==</definition>
        <argsstring>(const DataType &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="253" column="14" bodyfile="src/libsrc/DataType.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_data_type_1ad82c9c2bf4fec183c1751e3f02be373b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool evio::DataType::operator!=</definition>
        <argsstring>(const DataType &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/DataType.h" line="255" column="14" bodyfile="src/libsrc/DataType.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Numerical values associated with evio data types. This class approximates the Java enum it was copied from. ALSOTAGSEGMENT (0x40) value was removed from this class because the upper 2 bits of a byte containing the datatype are now used to store padding data.</para>
<para><simplesect kind="version"><para>6.0 </para>
</simplesect>
<simplesect kind="since"><para>6.0 7/22/2019 </para>
</simplesect>
<simplesect kind="author"><para>timmer </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>evio::DataType</label>
        <link refid="classevio_1_1_data_type"/>
        <childnode refid="1" relation="usage">
          <edgelabel>ALSOBANK</edgelabel>
          <edgelabel>ALSOSEGMENT</edgelabel>
          <edgelabel>BANK</edgelabel>
          <edgelabel>CHAR8</edgelabel>
          <edgelabel>CHARSTAR8</edgelabel>
          <edgelabel>COMPOSITE</edgelabel>
          <edgelabel>DOUBLE64</edgelabel>
          <edgelabel>FLOAT32</edgelabel>
          <edgelabel>HOLLERIT</edgelabel>
          <edgelabel>INT32</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/libsrc/DataType.h" line="32" column="5" bodyfile="src/libsrc/DataType.h" bodystart="32" bodyend="256"/>
    <listofallmembers>
      <member refid="classevio_1_1_data_type_1ab38996675c5240d92a1593fac3600cdc" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>ALSOBANK</name></member>
      <member refid="classevio_1_1_data_type_1a84e08dfdd193f7c1b336dc06b222fa73" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>ALSOSEGMENT</name></member>
      <member refid="classevio_1_1_data_type_1a9abb7776dd6a75467243aa15eded907d" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>BANK</name></member>
      <member refid="classevio_1_1_data_type_1a207a87cf653aae15a60da06a2b1ab1f4" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>bytes</name></member>
      <member refid="classevio_1_1_data_type_1a9a9803199ba7b5236f9fb5ccaacc9c6d" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>CHAR8</name></member>
      <member refid="classevio_1_1_data_type_1a44ebcac2851a8e66b41605ab55bc6708" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>CHARSTAR8</name></member>
      <member refid="classevio_1_1_data_type_1a9790e6d2d964cd17518b510cade71013" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>COMPOSITE</name></member>
      <member refid="classevio_1_1_data_type_1a4b5fb0e053c168e8e08255ec49eaba7c" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>DataType</name></member>
      <member refid="classevio_1_1_data_type_1a018e0280b01ac441c63dc529f391c812" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>DOUBLE64</name></member>
      <member refid="classevio_1_1_data_type_1a15212317494206aed89652808e36ffcb" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>FLOAT32</name></member>
      <member refid="classevio_1_1_data_type_1a0a61f0f28a505939e06e84c1e6e51daf" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>getBytes</name></member>
      <member refid="classevio_1_1_data_type_1ad49c0e00ce28f150c91cad724634c5d0" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>getDataType</name></member>
      <member refid="classevio_1_1_data_type_1a65d3f882e19a958e2ad6a05aacb4e67b" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>getName</name></member>
      <member refid="classevio_1_1_data_type_1a725fbb9d81257ac84d8ff6111d6f06b4" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>getName</name></member>
      <member refid="classevio_1_1_data_type_1a69fcde1e86a8cbad2a2ab213d070f3c8" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>getValue</name></member>
      <member refid="classevio_1_1_data_type_1a7e55a4c8ee5dd0e7b0d308ee9a2ae75d" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>HOLLERIT</name></member>
      <member refid="classevio_1_1_data_type_1ae23b05542b144e3b7d72628280532195" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>INT32</name></member>
      <member refid="classevio_1_1_data_type_1a0dc4d538981e2cf792738c9d295e0ed9" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>intToType</name></member>
      <member refid="classevio_1_1_data_type_1a43fa2881329c62cf42020bbc9b786106" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isBank</name></member>
      <member refid="classevio_1_1_data_type_1ad7e6fde70cb5eae2530bee8b2394977f" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isBank</name></member>
      <member refid="classevio_1_1_data_type_1a4a923d8f0249df81420fa8d21000efcb" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isInteger</name></member>
      <member refid="classevio_1_1_data_type_1a8c5bd7f199a30c163c274be1f51d6da3" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isSegment</name></member>
      <member refid="classevio_1_1_data_type_1afa6b14e9cdc06daf1ad89221cd7c572b" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isSegment</name></member>
      <member refid="classevio_1_1_data_type_1add9555ba07e3b576ff8c395d7687425c" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isStructure</name></member>
      <member refid="classevio_1_1_data_type_1ad398e7fb1f5cd94dd7866c0ca2322644" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isStructure</name></member>
      <member refid="classevio_1_1_data_type_1afafccc742f056bb1740cc7dd31a1955f" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isTagSegment</name></member>
      <member refid="classevio_1_1_data_type_1ae7d5a621c748b2bb68cf9cb8f7721036" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>isTagSegment</name></member>
      <member refid="classevio_1_1_data_type_1a0ad3467f252ad341a3f630f0210bc9e1" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>LONG64</name></member>
      <member refid="classevio_1_1_data_type_1a5385213a97280d02166d3a8949374229" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>mVALUE</name></member>
      <member refid="classevio_1_1_data_type_1a08e28b82940bb598029b0070bea1e9af" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>name</name></member>
      <member refid="classevio_1_1_data_type_1aa282946ea01e3cb1d3ca2a6292b40c92" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>names</name></member>
      <member refid="classevio_1_1_data_type_1a64b4f4f0ccc080ba2d28040f49cfef3c" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>NOT_A_VALID_TYPE</name></member>
      <member refid="classevio_1_1_data_type_1a8aeecc0417a67fb853c0e7508bc890f5" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>nVALUE</name></member>
      <member refid="classevio_1_1_data_type_1a594dff401ed927c25cae6147977bf0b4" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>NVALUE</name></member>
      <member refid="classevio_1_1_data_type_1ad82c9c2bf4fec183c1751e3f02be373b" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>operator!=</name></member>
      <member refid="classevio_1_1_data_type_1aa6511be49823fba1f646a1f061edb148" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>operator==</name></member>
      <member refid="classevio_1_1_data_type_1aa696a1e106a458b808fbb6892432ae59" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>SEGMENT</name></member>
      <member refid="classevio_1_1_data_type_1a227fb12c5f747c91239e4d305fa83447" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>SHORT16</name></member>
      <member refid="classevio_1_1_data_type_1a96276904feb345922470078df8b5e5c7" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>TAGSEGMENT</name></member>
      <member refid="classevio_1_1_data_type_1a4b55bfb1a25acc690c9456f0869c4b49" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>toString</name></member>
      <member refid="classevio_1_1_data_type_1a1d561abba7301ebf74fefad8b29fa8ae" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>UCHAR8</name></member>
      <member refid="classevio_1_1_data_type_1ab594570d76a48584ae27c5e2276b3c04" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>UINT32</name></member>
      <member refid="classevio_1_1_data_type_1a0f556bae625e41a9adc3bae9949112d3" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>ULONG64</name></member>
      <member refid="classevio_1_1_data_type_1a2b3013fda814a931239319319790c761" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>UNKNOWN32</name></member>
      <member refid="classevio_1_1_data_type_1aa4dc041c0f0796a4b7dd12d11a9c325a" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>USHORT16</name></member>
      <member refid="classevio_1_1_data_type_1a43d7483fa26043377eeb1b57a20138d7" prot="private" virt="non-virtual"><scope>evio::DataType</scope><name>value</name></member>
      <member refid="classevio_1_1_data_type_1a5e28fed061292b3f1fa35011ed54ccbc" prot="public" virt="non-virtual"><scope>evio::DataType</scope><name>valueOf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
