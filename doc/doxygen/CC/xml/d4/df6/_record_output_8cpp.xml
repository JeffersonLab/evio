<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="d4/df6/_record_output_8cpp" kind="file" language="C++">
    <compoundname>RecordOutput.cpp</compoundname>
    <includes refid="dc/dd3/_record_output_8h" local="yes">RecordOutput.h</includes>
    <incdepgraph>
      <node id="49">
        <label>lz4.h</label>
      </node>
      <node id="21">
        <label>iomanip</label>
      </node>
      <node id="26">
        <label>queue</label>
      </node>
      <node id="22">
        <label>limits</label>
      </node>
      <node id="35">
        <label>RecordNode.h</label>
        <link refid="d8/d7d/_record_node_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>EvioNode.h</label>
        <link refid="d1/d31/_evio_node_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>iterator</label>
      </node>
      <node id="29">
        <label>BaseStructureHeader.h</label>
        <link refid="dd/de1/_base_structure_header_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="28">
        <label>StructureType.h</label>
        <link refid="d3/d58/_structure_type_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>sys/mman.h</label>
      </node>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="18">
        <label>EvioBank.h</label>
        <link refid="dd/d6f/_evio_bank_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>IBlockHeader.h</label>
        <link refid="de/d42/_i_block_header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="20">
        <label>BaseStructure.h</label>
        <link refid="da/d80/_base_structure_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>regex</label>
      </node>
      <node id="17">
        <label>exception</label>
      </node>
      <node id="32">
        <label>fstream</label>
      </node>
      <node id="1">
        <label>RecordOutput.cpp</label>
        <link refid="d4/df6/_record_output_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RecordOutput.h</label>
        <link refid="dc/dd3/_record_output_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>HeaderType.h</label>
        <link refid="d5/d98/_header_type_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>SegmentHeader.h</label>
        <link refid="de/df0/_segment_header_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>FileHeader.h</label>
        <link refid="d2/d66/_file_header_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ios</label>
      </node>
      <node id="50">
        <label>lz4hc.h</label>
      </node>
      <node id="5">
        <label>cstdio</label>
      </node>
      <node id="37">
        <label>CompositeData.h</label>
        <link refid="d6/d36/_composite_data_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ByteBuffer.h</label>
        <link refid="d6/d6c/_byte_buffer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>bitset</label>
      </node>
      <node id="42">
        <label>EventHeaderParser.h</label>
        <link refid="d7/dfc/_event_header_parser_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Util.h</label>
        <link refid="dd/d90/_util_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>stack</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
      <node id="39">
        <label>BankHeader.h</label>
        <link refid="da/da8/_bank_header_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>TagSegmentHeader.h</label>
        <link refid="d7/d3a/_tag_segment_header_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>utility</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>cstdlib</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="44">
        <label>IEvioFilter.h</label>
        <link refid="dd/d08/_i_evio_filter_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>DataType.h</label>
        <link refid="db/da7/_data_type_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ByteOrder.h</label>
        <link refid="d1/d02/_byte_order_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>IEvioListener.h</label>
        <link refid="d3/d89/_i_evio_listener_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>RecordHeader.h</label>
        <link refid="d6/dea/_record_header_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>EvioException.h</label>
        <link refid="d8/d26/_evio_exception_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>type_traits</label>
      </node>
      <node id="34">
        <label>algorithm</label>
      </node>
      <node id="48">
        <label>Compressor.h</label>
        <link refid="dc/d17/_compressor_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d9/deb/namespaceevio">evio</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020,<sp/>Jefferson<sp/>Science<sp/>Associates,<sp/>LLC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subject<sp/>to<sp/>the<sp/>terms<sp/>in<sp/>the<sp/>LICENSE<sp/>file<sp/>found<sp/>in<sp/>the<sp/>top-level<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EPSCI<sp/>Group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thomas<sp/>Jefferson<sp/>National<sp/>Accelerator<sp/>Facility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>12000,<sp/>Jefferson<sp/>Ave,<sp/>Newport<sp/>News,<sp/>VA<sp/>23606</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(757)-269-7100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/dd3/_record_output_8h" kindref="compound">RecordOutput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/deb/namespaceevio" kindref="compound">evio</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" kindref="member">RecordOutput::RecordOutput</ref>()<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref>(<ref refid="da/d7d/classevio_1_1_byte_order" kindref="compound">ByteOrder</ref>::ENDIAN_LITTLE,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d08/classevio_1_1_compressor" kindref="compound">Compressor</ref>::UNCOMPRESSED,<sp/><ref refid="df/dd8/classevio_1_1_header_type" kindref="compound">HeaderType</ref>::EVIO_RECORD)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="d2/d7a/classevio_1_1_record_output_1a232e28211cd5630b6bb43c8944ffe60e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" kindref="member">RecordOutput::RecordOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d7d/classevio_1_1_byte_order" kindref="compound">ByteOrder</ref><sp/>&amp;<sp/>order,<sp/>uint32_t<sp/>maxEventCount,<sp/>uint32_t<sp/>maxBufferSize,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d08/classevio_1_1_compressor_1aed2330d08ee8c96b2690fec7f9a68747" kindref="member">Compressor::CompressionType</ref><sp/>compressionType,<sp/><ref refid="df/dd8/classevio_1_1_header_type" kindref="compound">HeaderType</ref><sp/>hType)<sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType.<ref refid="df/dd8/classevio_1_1_header_type_1a4cadc344afbb1083c81b026e4b54d7d8" kindref="member">isEvioFileHeader</ref>())<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a2b01085c1ea7b23010e4cb4447f2d04a" kindref="member">HeaderType::EVIO_RECORD</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType.<ref refid="df/dd8/classevio_1_1_header_type_1a09398c15ab070c47fd4b9963d668fab6" kindref="member">isHipoFileHeader</ref>())<sp/><sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5b2643dccfbe51c3f437423ebaf3ebfd" kindref="member">HeaderType::HIPO_RECORD</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType<sp/>==<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a52318a195f72f967b67e24a45ca8358b" kindref="member">HeaderType::EVIO_TRAILER</ref>)<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a2b01085c1ea7b23010e4cb4447f2d04a" kindref="member">HeaderType::EVIO_RECORD</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType<sp/>==<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5949c8d28f54527e8616666c03aa0ff7" kindref="member">HeaderType::HIPO_TRAILER</ref>)<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5b2643dccfbe51c3f437423ebaf3ebfd" kindref="member">HeaderType::HIPO_RECORD</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref><sp/>=<sp/>std::make_shared&lt;RecordHeader&gt;(hType);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressionType(compressionType);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref><sp/>=<sp/>order;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxEventCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>=<sp/>maxEventCount;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxBufferSize<sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>maxBufferSize;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it&apos;s<sp/>at<sp/>least<sp/>10%<sp/>bigger<sp/>we&apos;ll<sp/>be<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>so<sp/>that<sp/>if<sp/>we<sp/>&quot;compress&quot;<sp/>random<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>a<sp/>place<sp/>to<sp/>put<sp/>its<sp/>larger<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/>(int)<sp/>(1.1<sp/>*<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="d2/d7a/classevio_1_1_record_output_1a3308b373e210f9d4cc3f3f1faf50e544" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" kindref="member">RecordOutput::RecordOutput</ref>(std::shared_ptr&lt;ByteBuffer&gt;<sp/>&amp;<sp/>buffer,<sp/>uint32_t<sp/>maxEventCount,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d08/classevio_1_1_compressor_1aed2330d08ee8c96b2690fec7f9a68747" kindref="member">Compressor::CompressionType</ref><sp/>compressionType,<sp/><ref refid="df/dd8/classevio_1_1_header_type" kindref="compound">HeaderType</ref><sp/>hType)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType.<ref refid="df/dd8/classevio_1_1_header_type_1a4cadc344afbb1083c81b026e4b54d7d8" kindref="member">isEvioFileHeader</ref>())<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a2b01085c1ea7b23010e4cb4447f2d04a" kindref="member">HeaderType::EVIO_RECORD</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType.<ref refid="df/dd8/classevio_1_1_header_type_1a09398c15ab070c47fd4b9963d668fab6" kindref="member">isHipoFileHeader</ref>())<sp/><sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5b2643dccfbe51c3f437423ebaf3ebfd" kindref="member">HeaderType::HIPO_RECORD</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType<sp/>==<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a52318a195f72f967b67e24a45ca8358b" kindref="member">HeaderType::EVIO_TRAILER</ref>)<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a2b01085c1ea7b23010e4cb4447f2d04a" kindref="member">HeaderType::EVIO_RECORD</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hType<sp/>==<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5949c8d28f54527e8616666c03aa0ff7" kindref="member">HeaderType::HIPO_TRAILER</ref>)<sp/>hType<sp/>=<sp/><ref refid="df/dd8/classevio_1_1_header_type_1a5b2643dccfbe51c3f437423ebaf3ebfd" kindref="member">HeaderType::HIPO_RECORD</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref><sp/>=<sp/>std::make_shared&lt;RecordHeader&gt;(hType);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressionType(compressionType);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref><sp/>=<sp/>buffer-&gt;order();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>writing<sp/>at<sp/>startingPosition,<sp/>but<sp/>allow<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>extend<sp/>to<sp/>the<sp/>full<sp/>buffer<sp/>capacity<sp/>and<sp/>not<sp/>be<sp/>limited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>only<sp/>the<sp/>limit.<sp/>This<sp/>is<sp/>done<sp/>as<sp/>we<sp/>may<sp/>be<sp/>adding<sp/>records</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>already<sp/>existing<sp/>records,<sp/>but<sp/>we<sp/>most<sp/>likely<sp/>will<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>fit<sp/>a<sp/>record<sp/>in<sp/>between<sp/>2<sp/>existing<sp/>records.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>=<sp/>buffer-&gt;position();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref><sp/>=<sp/>buffer-&gt;capacity()<sp/>-<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer-&gt;limit(buffer-&gt;capacity());</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxEventCount<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>=<sp/>maxEventCount;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>things<sp/>so<sp/>user<sp/>buffer<sp/>is<sp/>10%<sp/>bigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>(int)<sp/>(0.91*<ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>used<sp/>with<sp/>user<sp/>provided<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>change<sp/>it<sp/>anyway<sp/>for<sp/>use<sp/>in<sp/>copy(RecordOutput)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>*<sp/>4);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="d2/d7a/classevio_1_1_record_output_1ab74c5e86b19c90156972a7b512d91182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" kindref="member">RecordOutput::RecordOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;<sp/>rec)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy(rec);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>buffer<sp/>limits<sp/>&amp;<sp/>positions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit()).position(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;limit(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;limit()).position(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;limit(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;limit()).position(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;position());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="d2/d7a/classevio_1_1_record_output_1a2437148cfd6aba94169e6ca016aa2443" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ac8c45b1555c4194aba1425bf36ca8f1b" kindref="member">RecordOutput::RecordOutput</ref>(<ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;&amp;<sp/>rec)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>code<sp/>below<sp/>in<sp/>move<sp/>assignment<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>std::move(rec);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="d2/d7a/classevio_1_1_record_output_1a7341c94d383583af26399f12dcedade0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7341c94d383583af26399f12dcedade0" kindref="member">RecordOutput::operator=</ref>(<ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref>&amp;&amp;<sp/>other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>self<sp/>assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>primitive<sp/>types<sp/>&amp;<sp/>immutable<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventCount<sp/>=<sp/>other.<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexSize<sp/><sp/>=<sp/>other.indexSize;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventSize<sp/><sp/>=<sp/>other.eventSize;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byteOrder<sp/><sp/>=<sp/>other.byteOrder;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_EVENT_COUNT<sp/><sp/><sp/><sp/>=<sp/>other.MAX_EVENT_COUNT;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_BUFFER_SIZE<sp/><sp/><sp/><sp/>=<sp/>other.MAX_BUFFER_SIZE;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RECORD_BUFFER_SIZE<sp/>=<sp/>other.RECORD_BUFFER_SIZE;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userBufferSize<sp/><sp/><sp/><sp/><sp/>=<sp/>other.userBufferSize;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startingPosition<sp/><sp/><sp/>=<sp/>other.startingPosition;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userProvidedBuffer<sp/>=<sp/>other.userProvidedBuffer;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>construct<sp/>header<sp/>(nothing<sp/>needs<sp/>moving)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>std::make_shared&lt;RecordHeader&gt;(*(other.header.get()));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>all<sp/>the<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copies<sp/>everything<sp/>except<sp/>shared<sp/>pointer<sp/>to<sp/>buffer<sp/>which<sp/>gets<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordBinary<sp/>=<sp/>std::move(other.recordBinary);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordEvents<sp/>=<sp/>std::move(other.recordEvents);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordIndex<sp/><sp/>=<sp/>std::move(other.recordIndex);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordData<sp/><sp/><sp/>=<sp/>std::move(other.recordData);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="d2/d7a/classevio_1_1_record_output_1a9cb6b09fcc422d78385988723a1a0fd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7341c94d383583af26399f12dcedade0" kindref="member">RecordOutput::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy(other);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>buffer<sp/>limits<sp/>&amp;<sp/>positions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(other.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit()).position(other.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;limit(other.<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;limit()).position(other.<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;limit(other.<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;limit()).position(other.<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;position());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="d2/d7a/classevio_1_1_record_output_1a57adc95dceace9f15a5d4525587d346c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a57adc95dceace9f15a5d4525587d346c" kindref="member">RecordOutput::setBuffer</ref>(std::shared_ptr&lt;ByteBuffer&gt;<sp/>&amp;<sp/>buf)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf-&gt;order()<sp/>!=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;setBuffer():<sp/>warning,<sp/>changing<sp/>buffer&apos;s<sp/>byte<sp/>order!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref><sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>=<sp/>buf-&gt;position();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref><sp/>=<sp/>buf-&gt;capacity()<sp/>-<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf-&gt;limit(buf-&gt;capacity());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>(int)<sp/>(0.91*<ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>re-allocate<sp/>memory<sp/>if<sp/>current<sp/>buffers<sp/>are<sp/>too<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref><sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="d2/d7a/classevio_1_1_record_output_1a962e99aa5e7234890e786fb9f4f0cd15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a962e99aa5e7234890e786fb9f4f0cd15" kindref="member">RecordOutput::transferDataForReading</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;<sp/>rec)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy(rec);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>buffers<sp/>ready<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit()).position(0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;limit(<ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>).position(0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;limit(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>).position(0);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RecordOutput::copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output" kindref="compound">RecordOutput</ref><sp/>&amp;<sp/>rec)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Avoid<sp/>self<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rec)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>primitive<sp/>types<sp/>&amp;<sp/>immutable<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref><sp/><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>construct<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref><sp/>=<sp/>std::make_shared&lt;RecordHeader&gt;(*(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>.get()));</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>would<sp/>be<sp/>nice<sp/>to<sp/>leave<sp/>MAX_EVENT_COUNT<sp/>as<sp/>is<sp/>so<sp/>RecordSupply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>consistent<sp/>behavior.<sp/>But<sp/>I<sp/>don&apos;t<sp/>think<sp/>that&apos;s<sp/>possible<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>record<sp/>output<sp/>stream<sp/>being<sp/>copied<sp/>is<sp/>larger.<sp/>Since<sp/>the<sp/>record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>copied<sp/>may<sp/>not<sp/>have<sp/>had<sp/>build()<sp/>called,<sp/>go<sp/>by<sp/>the<sp/>max<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>not<sp/>how<sp/>much<sp/>data<sp/>are<sp/>in<sp/>the<sp/>buffers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>the<sp/>larger<sp/>of<sp/>rec&apos;s<sp/>or<sp/>this<sp/>object&apos;s<sp/>buffer<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>||</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reallocate<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>record<sp/>has<sp/>a<sp/>user-provided<sp/>recordBinary<sp/>buffer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>user<sp/>is<sp/>expecting<sp/>data<sp/>to<sp/>be<sp/>built<sp/>into<sp/>that<sp/>same<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>data<sp/>to<sp/>be<sp/>copied<sp/>is<sp/>larger<sp/>than<sp/>can<sp/>be<sp/>contained<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user-provided<sp/>buffer,<sp/>then<sp/>we<sp/>throw<sp/>an<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>EvioException(</highlight><highlight class="stringliteral">&quot;trying<sp/>to<sp/>copy<sp/>bigger<sp/>record<sp/>which<sp/>may<sp/>not<sp/>fit<sp/>into<sp/>buffer<sp/>provided<sp/>by<sp/>user&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref><sp/>=<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref>*4);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>data<sp/>(recordData<sp/>is<sp/>just<sp/>a<sp/>temporary<sp/>holding<sp/>buffer<sp/>and<sp/>does<sp/>NOT<sp/>need<sp/>to<sp/>be<sp/>copied)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)rec.<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)rec.<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>rec.<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit());</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>set<sp/>limits<sp/>or<sp/>positions<sp/>of<sp/>buffers<sp/>in<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="d2/d7a/classevio_1_1_record_output_1a8818ee6b0a69abc6c5fdbec1ca899cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8818ee6b0a69abc6c5fdbec1ca899cee" kindref="member">RecordOutput::getMaxEventCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref>;}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="d2/d7a/classevio_1_1_record_output_1a0a75729eb429ff2b40d1b189caf259fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a0a75729eb429ff2b40d1b189caf259fd" kindref="member">RecordOutput::getUserBufferSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a96a02d6c411124b2c06ac1b302acc870" kindref="member">userBufferSize</ref>;}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="d2/d7a/classevio_1_1_record_output_1ab8778ded697fc71281c287a2c2f99fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab8778ded697fc71281c287a2c2f99fa7" kindref="member">RecordOutput::getUncompressedSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="d2/d7a/classevio_1_1_record_output_1acbb92327f0cf806b7b87b0b20336b05f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acbb92327f0cf806b7b87b0b20336b05f" kindref="member">RecordOutput::getInternalBufferCapacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>;}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="d2/d7a/classevio_1_1_record_output_1a3644f5817bd565b0b6a07617da013f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;RecordHeader&gt;<sp/>&amp;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3644f5817bd565b0b6a07617da013f27" kindref="member">RecordOutput::getHeader</ref>()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>;}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="d2/d7a/classevio_1_1_record_output_1ab75d3e5ba25945f61f6376f7096dee38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab75d3e5ba25945f61f6376f7096dee38" kindref="member">RecordOutput::getEventCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>;}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="d2/d7a/classevio_1_1_record_output_1a95a914b8d9c2e5dce9764be14002d8b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ByteBuffer&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a95a914b8d9c2e5dce9764be14002d8b6" kindref="member">RecordOutput::getBinaryBuffer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>;}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="d2/d7a/classevio_1_1_record_output_1ae6fc04a6ad40782206a858489d822f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d08/classevio_1_1_compressor_1aed2330d08ee8c96b2690fec7f9a68747" kindref="member">Compressor::CompressionType</ref><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae6fc04a6ad40782206a858489d822f74" kindref="member">RecordOutput::getCompressionType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressionType();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="d2/d7a/classevio_1_1_record_output_1af2894b6e7c23404c74d9f0bc2c602651" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="df/dd8/classevio_1_1_header_type" kindref="compound">HeaderType</ref><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1af2894b6e7c23404c74d9f0bc2c602651" kindref="member">RecordOutput::getHeaderType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getHeaderType();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="d2/d7a/classevio_1_1_record_output_1a9d2ad711af9a93c78e70a1d4b85f906f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a9d2ad711af9a93c78e70a1d4b85f906f" kindref="member">RecordOutput::hasUserProvidedBuffer</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>;}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="d2/d7a/classevio_1_1_record_output_1a7d31fb593c433d6c5be6961a5b43d1da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d7d/classevio_1_1_byte_order" kindref="compound">ByteOrder</ref><sp/>&amp;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7d31fb593c433d6c5be6961a5b43d1da" kindref="member">RecordOutput::getByteOrder</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>;}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RecordOutput::allocate()<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trying<sp/>to<sp/>compress<sp/>random<sp/>data<sp/>will<sp/>expand<sp/>it,<sp/>so<sp/>create<sp/>a<sp/>cushion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref><sp/>=<sp/>std::make_shared&lt;ByteBuffer&gt;(<ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;order(<ref refid="d2/d7a/classevio_1_1_record_output_1a8bc3bca719406f7b353facd7cfcf2ab4" kindref="member">byteOrder</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">RecordOutput::roomForEvent</ref>(uint32_t<sp/>length)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>this<sp/>record&apos;s<sp/>header<sp/>including<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+<sp/>4<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref><sp/>+<sp/>length)<sp/>&lt;=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" kindref="member">RecordOutput::oneTooMany</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>+<sp/>1<sp/>&gt;<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4a96554c0eed9a1844c799ae2e8e6535" kindref="member">MAX_EVENT_COUNT</ref>);}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RecordOutput::allowedIntoRecord(uint32_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(length));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>event,<sp/>uint32_t<sp/>eventLen,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>receive<sp/>a<sp/>single<sp/>event<sp/>larger<sp/>than<sp/>our<sp/>memory,<sp/>we<sp/>must<sp/>accommodate<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>increasing<sp/>our<sp/>internal<sp/>buffer<sp/>size(s).<sp/>Cannot<sp/>simply<sp/>refuse<sp/>to<sp/>write<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>event<sp/>during<sp/>event<sp/>building<sp/>for<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen<sp/>+<sp/>extraDataLen))<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>roughly<sp/>what<sp/>we<sp/>need<sp/>+<sp/>1MB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>eventLen<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>NOT<sp/>reset<sp/>record<sp/>type,<sp/>compression<sp/>type,<sp/>or<sp/>byte<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" kindref="member">oneTooMany</ref>()<sp/>||<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen))<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>event<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>memcpy<sp/>underneath<sp/>since,<sp/>unlike<sp/>Java,<sp/>there<sp/>is<sp/>no<sp/>&quot;direct&quot;<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;put(event,<sp/>eventLen);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+=<sp/>eventLen;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>1<sp/>more<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;putInt(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>,<sp/>eventLen);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>++;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="d2/d7a/classevio_1_1_record_output_1abcaf71b5a5034077688abf666da31653" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;<sp/>event)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">addEvent</ref>(event,<sp/>0,<sp/>event.size(),<sp/>0);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="d2/d7a/classevio_1_1_record_output_1ab82fdc44fa2eafa3b54a8c76f4ccd018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;<sp/>event,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset,<sp/>uint32_t<sp/>eventLen,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">addEvent</ref>((</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(event.data()))<sp/>+<sp/>offset,<sp/>eventLen,<sp/>extraDataLen);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="579" refid="d2/d7a/classevio_1_1_record_output_1aa6b6ad449487f4ed9305e3d6b75f7277" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d30/classevio_1_1_byte_buffer" kindref="compound">ByteBuffer</ref><sp/>&amp;<sp/>event,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eventLen<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.remaining();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen<sp/>+<sp/>extraDataLen))<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>eventLen<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" kindref="member">oneTooMany</ref>()<sp/>||<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen))<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recordEvents<sp/>backing<sp/>array&apos;s<sp/>offset<sp/>=<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;\nRecordOutput::addEvent(buf):<sp/>write<sp/>(in<sp/>recordEvents)<sp/>to<sp/>pos<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>pos<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array()<sp/>+<sp/>pos),</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(event.<ref refid="dc/d30/classevio_1_1_byte_buffer_1aa0e335238a57eaa0bffee8f968e5995f" kindref="member">array</ref>()<sp/>+<sp/>event.<ref refid="dc/d30/classevio_1_1_byte_buffer_1abf7abf99aa7544601997f40eba298648" kindref="member">arrayOffset</ref>()<sp/>+<sp/>event.<ref refid="dc/d30/classevio_1_1_byte_buffer_1a88f84e6b1757db70542eac13294fc80e" kindref="member">position</ref>()),</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventLen);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position(pos<sp/>+<sp/>eventLen);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+=<sp/>eventLen;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;putInt(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>,<sp/>eventLen);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>++;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="d2/d7a/classevio_1_1_record_output_1a2625d56532619d8f027214de68e097d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ByteBuffer&gt;<sp/>&amp;<sp/>event,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">addEvent</ref>(*(event.get()),<sp/>extraDataLen);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="659" refid="d2/d7a/classevio_1_1_record_output_1a82938baf95da3faf5345af0a3a19c781" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(<ref refid="de/dd0/classevio_1_1_evio_node" kindref="compound">EvioNode</ref><sp/>&amp;<sp/>node,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>eventLen<sp/>=<sp/>node.<ref refid="de/dd0/classevio_1_1_evio_node_1a877b920f8610559a3ed7b704f9e82992" kindref="member">getTotalBytes</ref>();</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node.<ref refid="de/dd0/classevio_1_1_evio_node_1a8fcdbb769e77c2ceb6127953dc3056ee" kindref="member">getTypeObj</ref>().<ref refid="d5/d23/classevio_1_1_data_type_1a43fa2881329c62cf42020bbc9b786106" kindref="member">isBank</ref>())<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref>(</highlight><highlight class="stringliteral">&quot;node<sp/>does<sp/>not<sp/>represent<sp/>a<sp/>bank<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>node.<ref refid="de/dd0/classevio_1_1_evio_node_1a8fcdbb769e77c2ceb6127953dc3056ee" kindref="member">getTypeObj</ref>().<ref refid="d5/d23/classevio_1_1_data_type_1a4b55bfb1a25acc690c9456f0869c4b49" kindref="member">toString</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen<sp/>+<sp/>extraDataLen))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>eventLen<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" kindref="member">oneTooMany</ref>()<sp/>||<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d30/classevio_1_1_byte_buffer" kindref="compound">ByteBuffer</ref><sp/>buf(eventLen);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.<ref refid="de/dd0/classevio_1_1_evio_node_1ae06a088063f64405e6e955952d062264" kindref="member">getStructureBuffer</ref>(buf,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;\nRecordOutput::addEvent(node):<sp/>write<sp/>(in<sp/>recordEvents)to<sp/>pos<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>pos<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array()<sp/>+<sp/>pos),</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(buf.<ref refid="dc/d30/classevio_1_1_byte_buffer_1aa0e335238a57eaa0bffee8f968e5995f" kindref="member">array</ref>()<sp/>+<sp/>buf.<ref refid="dc/d30/classevio_1_1_byte_buffer_1abf7abf99aa7544601997f40eba298648" kindref="member">arrayOffset</ref>()<sp/>+<sp/>buf.<ref refid="dc/d30/classevio_1_1_byte_buffer_1a88f84e6b1757db70542eac13294fc80e" kindref="member">position</ref>()),</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventLen);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position(pos<sp/>+<sp/>eventLen);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+=<sp/>eventLen;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;putInt(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>,<sp/>eventLen);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>++;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="d2/d7a/classevio_1_1_record_output_1a93aa61e8347a47378ecbf1cb1510cc5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(std::shared_ptr&lt;EvioNode&gt;<sp/>&amp;<sp/>node,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">addEvent</ref>(*(node.get()),<sp/>extraDataLen);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="d2/d7a/classevio_1_1_record_output_1ae543847b42a7e97894d747a254c3a6c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(<ref refid="de/de3/classevio_1_1_evio_bank" kindref="compound">EvioBank</ref><sp/>&amp;<sp/>event,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>eventLen<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.getTotalBytes();</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1<sp/>&amp;&amp;<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen<sp/>+<sp/>extraDataLen))<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ae2ed1d784e644e8e5cb2ddacbeeff85f" kindref="member">userProvidedBuffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>=<sp/>eventLen<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ad7121a345c5f6ba668983660e8158919" kindref="member">RECORD_BUFFER_SIZE</ref><sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a3f4d7b9042307cbe6e3a223a6c374479" kindref="member">MAX_BUFFER_SIZE</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a1c660c90cdcd914312f659e5c775a714" kindref="member">ONE_MEG</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocate();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ad8f3cdf93e08051cb9be4e60ec1d7527" kindref="member">oneTooMany</ref>()<sp/>||<sp/>!<ref refid="d2/d7a/classevio_1_1_record_output_1afcbb151999c6a2db36dbf06994756e0d" kindref="member">roomForEvent</ref>(eventLen))<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rePos<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.write(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array()<sp/>+<sp/>rePos,<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;order());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;position(rePos<sp/>+<sp/>eventLen);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/>+=<sp/>eventLen;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;putInt(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>,<sp/>eventLen);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>++;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="d2/d7a/classevio_1_1_record_output_1adaa4001ce8e4866b5915b3ba11897c7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">RecordOutput::addEvent</ref>(std::shared_ptr&lt;EvioBank&gt;<sp/>&amp;<sp/>event,<sp/>uint32_t<sp/>extraDataLen)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a5430397efd27db0815892cd7c61c08a2" kindref="member">addEvent</ref>(*(event.get()),<sp/>extraDataLen);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1abc4221165d1626407280c56e7cc4ea70" kindref="member">RecordOutput::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>This<sp/>may<sp/>do<sp/>way<sp/>too<sp/>much!<sp/>Think<sp/>about<sp/>this<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;reset();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="829" refid="d2/d7a/classevio_1_1_record_output_1acd8fcf62ec243383f68d558a6924c659" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd8fcf62ec243383f68d558a6924c659" kindref="member">RecordOutput::setStartingBufferPosition</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(pos);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" kindref="member">RecordOutput::build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>events<sp/>have<sp/>been<sp/>added<sp/>yet,<sp/>just<sp/>write<sp/>a<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setEntries(0);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setDataLength(0);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setIndexLength(0);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(0);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(<ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(<ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(<ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;writeHeader(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;build:<sp/>buf<sp/>lim<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>recordBinary-&gt;limit()<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>cap<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>recordBinary-&gt;capacity()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>compressionType<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressionType();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>in<sp/>recordBinary<sp/>buffer<sp/>of<sp/>just<sp/>past<sp/>the<sp/>record<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recBinPastHdr<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;build:<sp/>pos<sp/>past<sp/>header<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>recBinPastHdr<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>in<sp/>recordBinary<sp/>buffer&apos;s<sp/>backing<sp/>array<sp/>of<sp/>just<sp/>past<sp/>the<sp/>record<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>the<sp/>same<sp/>as<sp/>the<sp/>corresponding<sp/>buffer<sp/>position.<sp/>But<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>account<sp/>for<sp/>the<sp/>user<sp/>providing<sp/>a<sp/>buffer<sp/>which<sp/>is<sp/>mapped<sp/>on<sp/>to<sp/>a<sp/>bigger<sp/>backing<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>happen<sp/>if<sp/>the<sp/>user<sp/>provides<sp/>a<sp/>slice()<sp/>of<sp/>another<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recBinPastHdrAbsolute<sp/>=<sp/>recBinPastHdr<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;arrayOffset();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>index<sp/>&amp;<sp/>event<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>compressing<sp/>data<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compressionType<sp/>!=<sp/><ref refid="da/d08/classevio_1_1_compressor_1aed2330d08ee8c96b2690fec7f9a68747a056585718cbf5c7808c0e37b1f88dbb9" kindref="member">Compressor::UNCOMPRESSED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>into<sp/>a<sp/>single,<sp/>temporary<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;put(<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>NOT<sp/>compressing<sp/>data<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;build:<sp/>recordBinary<sp/>len<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>userBufferSize<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>start<sp/>pos<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>startingPosition<sp/>&lt;&lt;<sp/>&quot;,<sp/>data<sp/>to<sp/>write<sp/>=<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(RecordHeader::HEADER_SIZE_BYTES<sp/>+<sp/>indexSize<sp/>+<sp/>eventSize)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>directly<sp/>into<sp/>final<sp/>buffer,<sp/>past<sp/>where<sp/>header<sp/>will<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(recBinPastHdr);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;build:<sp/>recordBinary<sp/>pos<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>recordBinary-&gt;position()<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>eventSize<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eventSize<sp/>&lt;&lt;<sp/>&quot;,<sp/>recordEvents<sp/>buffer<sp/>capacity<sp/>=<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recordEvents-&gt;capacity()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evio<sp/>data<sp/>is<sp/>padded,<sp/>but<sp/>not<sp/>necessarily<sp/>all<sp/>hipo<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncompressed<sp/>data<sp/>length<sp/>is<sp/>NOT<sp/>padded,<sp/>but<sp/>the<sp/>record<sp/>length<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>uncompressedDataSize<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>compressedSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>gzippedData;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;build:<sp/>writing<sp/>index<sp/>of<sp/>size<sp/>&quot;<sp/>&lt;&lt;<sp/>indexSize<sp/>&lt;&lt;<sp/>&quot;,<sp/>events<sp/>of<sp/>size<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventSize<sp/>&lt;&lt;<sp/>&quot;,<sp/>total<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>uncompressedDataSize<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>that<sp/>temporary<sp/>buffer<sp/>into<sp/>destination<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(skipping<sp/>over<sp/>where<sp/>record<sp/>header<sp/>will<sp/>be<sp/>written).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(compressionType)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZ4<sp/>fastest<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressedSize<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().<ref refid="da/d08/classevio_1_1_compressor_1a980dd68d0561413488f9fa4290f2f55b" kindref="member">compressLZ4</ref>(</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,<sp/>uncompressedDataSize,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>recBinPastHdrAbsolute,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;capacity()<sp/>-<sp/>recBinPastHdrAbsolute));</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>compressed<sp/>data<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>entire<sp/>record<sp/>in<sp/>bytes<sp/>(don&apos;t<sp/>forget<sp/>padding!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZ4<sp/>highest<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressedSize<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().<ref refid="da/d08/classevio_1_1_compressor_1a442afd61a93ee8271e70bfe56de6aab2" kindref="member">compressLZ4Best</ref>(</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,<sp/>uncompressedDataSize,</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>recBinPastHdrAbsolute,</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;capacity()<sp/>-<sp/>recBinPastHdrAbsolute));</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Compressing<sp/>data<sp/>array<sp/>from<sp/>offset<sp/>=<sp/>0,<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>uncompressedDataSize<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>to<sp/>output.array<sp/>offset<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>recBinPastHdrAbsolute<sp/>&lt;&lt;<sp/>&quot;,<sp/>compressed<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/><sp/>compressedSize<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>available<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>(recordBinary-&gt;capacity()<sp/>-<sp/>recBinPastHdrAbsolute)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;BEFORE<sp/>setting<sp/>header<sp/>len:<sp/>comp<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getCompressedDataLength()<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>comp<sp/>words<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getCompressedDataLengthWords()<sp/>&lt;&lt;<sp/>&quot;,<sp/>padding<sp/>=<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;getCompressedDataLengthPadding()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;AFTER<sp/>setting,<sp/>read<sp/>back<sp/>from<sp/>header:<sp/>comp<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getCompressedDataLength()<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/>comp<sp/>words<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getCompressedDataLengthWords()<sp/>&lt;&lt;<sp/>&quot;,<sp/>padding<sp/>=<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header-&gt;getCompressedDataLengthPadding()<sp/>&lt;&lt;<sp/>&quot;,<sp/>rec<sp/>len<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getLength()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GZIP<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GZIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzippedData<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().compressGZIP(<ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize,<sp/>&amp;compressedSize);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(recBinPastHdr);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(gzippedData,<sp/>compressedSize);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>gzippedData;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>compression.<sp/>The<sp/>uncompressed<sp/>data<sp/>size<sp/>may<sp/>not<sp/>be<sp/>padded<sp/>to<sp/>a<sp/>4byte<sp/>boundary,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>make<sp/>sure<sp/>that&apos;s<sp/>accounted<sp/>for<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>words<sp/>=<sp/>uncompressedDataSize/4;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uncompressedDataSize<sp/>%<sp/>4<sp/>!=<sp/>0)<sp/>words++;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(words*4<sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>build():<sp/>set<sp/>header<sp/>length<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getLength()<sp/>&lt;&lt;<sp/>&quot;,<sp/>uncompressed<sp/>data<sp/>size<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>uncompressedDataSize<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>header<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setEntries(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setDataLength(<ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setIndexLength(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>COMPRESSED<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>compressedSize<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>events<sp/>size<sp/>(data<sp/><sp/>len)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>eventSize<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>type<sp/>=<sp/>&quot;<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressionType<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>uncompressed<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>uncompressedDataSize<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>record<sp/>bytes<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>header-&gt;getLength()<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>back<sp/>and<sp/>write<sp/>header<sp/>into<sp/>destination<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Does<sp/>NOT<sp/>change<sp/>recordBinary<sp/>pos<sp/>or<sp/>lim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;writeHeader(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>,<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>ready<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(<ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getLength()).position(0);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011" refid="d2/d7a/classevio_1_1_record_output_1ab579239aae44950a0cfa34698f04f63a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" kindref="member">RecordOutput::build</ref>(std::shared_ptr&lt;ByteBuffer&gt;<sp/>userHeader)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" kindref="member">build</ref>(*(userHeader.get()));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="d2/d7a/classevio_1_1_record_output_1ac07b05a275660709fc6c7767fcb556af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" kindref="member">RecordOutput::build</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d30/classevio_1_1_byte_buffer" kindref="compound">ByteBuffer</ref><sp/>&amp;<sp/>userHeader)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>much<sp/>user-header<sp/>data<sp/>do<sp/>we<sp/>actually<sp/>have<sp/>(limit<sp/>-<sp/>position)<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>userHeaderSize<sp/>=<sp/>userHeader.<ref refid="dc/d30/classevio_1_1_byte_buffer_1a32b043081cd3a62187f2577ce2966e7d" kindref="member">remaining</ref>();</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userHeaderSize<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a7c7cbf0f2bcc362662eea1fc4ff5d7ad" kindref="member">build</ref>();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/>buld:<sp/>indexSize<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>indexSize<sp/>&lt;&lt;<sp/>&quot;,<sp/>index<sp/>+<sp/>userHeader<sp/>=<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>(indexSize<sp/>+<sp/>userHeaderSize)<sp/>&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,<sp/><sp/>userheader<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>userHeaderSize<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>compressionType<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressionType();</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>uncompressedDataSize<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>in<sp/>recordBinary<sp/>buffer<sp/>of<sp/>just<sp/>past<sp/>the<sp/>record<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recBinPastHdr<sp/>=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>in<sp/>recordBinary<sp/>buffer&apos;s<sp/>backing<sp/>array<sp/>of<sp/>just<sp/>past<sp/>the<sp/>record<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>the<sp/>same<sp/>as<sp/>the<sp/>corresponding<sp/>buffer<sp/>position.<sp/>But<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>account<sp/>for<sp/>the<sp/>user<sp/>providing<sp/>a<sp/>buffer<sp/>which<sp/>is<sp/>mapped<sp/>on<sp/>to<sp/>a<sp/>bigger<sp/>backing<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>happen<sp/>if<sp/>the<sp/>user<sp/>provides<sp/>a<sp/>slice()<sp/>of<sp/>another<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Right<sp/>now,<sp/>slice()<sp/>is<sp/>not<sp/>implemented<sp/>in<sp/>C++<sp/>so<sp/>buf.arrayOffset()<sp/>=<sp/>0<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recBinPastHdr<sp/>=<sp/>recBinPastHdrAbsolute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>recBinPastHdrAbsolute<sp/>=<sp/>recBinPastHdr<sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;arrayOffset();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>compressing<sp/>data<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compressionType<sp/>!=<sp/><ref refid="da/d08/classevio_1_1_compressor_1aed2330d08ee8c96b2690fec7f9a68747a056585718cbf5c7808c0e37b1f88dbb9" kindref="member">Compressor::UNCOMPRESSED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>into<sp/>a<sp/>single,<sp/>temporary<sp/>buffer<sp/>the<sp/>following:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>uncompressed<sp/>index<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note,<sp/>put()<sp/>will<sp/>increment<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>uncompressed<sp/>user<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;put(userHeader.<ref refid="dc/d30/classevio_1_1_byte_buffer_1aa0e335238a57eaa0bffee8f968e5995f" kindref="member">array</ref>()<sp/>+<sp/>userHeader.<ref refid="dc/d30/classevio_1_1_byte_buffer_1a88f84e6b1757db70542eac13294fc80e" kindref="member">position</ref>(),<sp/>userHeaderSize);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>unpadded<sp/>user<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>find<sp/>the<sp/>user<sp/>header<sp/>length<sp/>in<sp/>words<sp/>&amp;<sp/>account<sp/>for<sp/>padding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setUserHeaderLength(userHeaderSize);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hop<sp/>over<sp/>padded<sp/>user<sp/>header<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize<sp/>+=<sp/>4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getUserHeaderLengthWords();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;position(uncompressedDataSize);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>uncompressed<sp/>data<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evio<sp/>data<sp/>is<sp/>padded,<sp/>but<sp/>not<sp/>necessarily<sp/>all<sp/>hipo<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncompressed<sp/>data<sp/>length<sp/>is<sp/>NOT<sp/>padded,<sp/>but<sp/>the<sp/>record<sp/>length<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize<sp/>+=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>NOT<sp/>compressing<sp/>data<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>directly<sp/>into<sp/>final<sp/>buffer,<sp/>past<sp/>where<sp/>header<sp/>will<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;clear();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(recBinPastHdr);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>uncompressed<sp/>index<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1ae24b881792676912fb68bbb7aedeab46" kindref="member">recordIndex</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>uncompressed<sp/>user<sp/>header<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(userHeader.<ref refid="dc/d30/classevio_1_1_byte_buffer_1aa0e335238a57eaa0bffee8f968e5995f" kindref="member">array</ref>()<sp/>+<sp/>userHeader.<ref refid="dc/d30/classevio_1_1_byte_buffer_1a88f84e6b1757db70542eac13294fc80e" kindref="member">position</ref>(),<sp/>userHeaderSize);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setUserHeaderLength(userHeaderSize);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize<sp/>+=<sp/>4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getUserHeaderLengthWords();</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(recBinPastHdr<sp/>+<sp/>uncompressedDataSize);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>uncompressed<sp/>data<sp/>array<sp/>(hipo/evio<sp/>data<sp/>is<sp/>already<sp/>padded)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(<ref refid="d2/d7a/classevio_1_1_record_output_1afa654ece2da736e553092de439b7d235" kindref="member">recordEvents</ref>-&gt;array(),<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>not<sp/>be<sp/>padded<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize<sp/>+=<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>that<sp/>temporary<sp/>buffer<sp/>into<sp/>destination<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(skipping<sp/>over<sp/>where<sp/>record<sp/>header<sp/>will<sp/>be<sp/>written).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>compressedSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>gzippedData;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(compressionType)<sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZ4<sp/>fastest<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressedSize<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().<ref refid="da/d08/classevio_1_1_compressor_1a980dd68d0561413488f9fa4290f2f55b" kindref="member">compressLZ4</ref>(</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,<sp/>uncompressedDataSize,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>recBinPastHdrAbsolute,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;capacity()<sp/>-<sp/>recBinPastHdrAbsolute));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>compressed<sp/>data<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>entire<sp/>record<sp/>in<sp/>bytes<sp/>(don&apos;t<sp/>forget<sp/>padding!)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZ4<sp/>highest<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compressedSize<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().<ref refid="da/d08/classevio_1_1_compressor_1a442afd61a93ee8271e70bfe56de6aab2" kindref="member">compressLZ4Best</ref>(</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,<sp/>uncompressedDataSize,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;array(),<sp/>recBinPastHdrAbsolute,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;capacity()<sp/>-<sp/>recBinPastHdrAbsolute));</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GZIP<sp/>compression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_GZIP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gzippedData<sp/>=<sp/><ref refid="da/d08/classevio_1_1_compressor_1abab453336d92bc8e693825ac143ff101" kindref="member">Compressor::getInstance</ref>().compressGZIP(<ref refid="d2/d7a/classevio_1_1_record_output_1a4bc61b0568796ba16c957a0c5e8c4f0f" kindref="member">recordData</ref>-&gt;array(),<sp/>0,</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uncompressedDataSize,<sp/>&amp;compressedSize);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;position(recBinPastHdr);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;put(gzippedData,<sp/>compressedSize);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>gzippedData;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(compressedSize);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(4*<ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getCompressedDataLengthWords()<sp/>+</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>compression.<sp/>The<sp/>uncompressed<sp/>data<sp/>size<sp/>may<sp/>not<sp/>be<sp/>padded<sp/>to<sp/>a<sp/>4byte<sp/>boundary,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>make<sp/>sure<sp/>that&apos;s<sp/>accounted<sp/>for<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setCompressedDataLength(0);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>words<sp/>=<sp/>uncompressedDataSize/4;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uncompressedDataSize<sp/>%<sp/>4<sp/>!=<sp/>0)<sp/>words++;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setLength(words*4<sp/>+<sp/><ref refid="d8/d64/classevio_1_1_record_header_1a0e09d731589bcfe2705d0c606192f6eb" kindref="member">RecordHeader::HEADER_SIZE_BYTES</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/>COMPRESSED<sp/>SIZE<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>compressedSize<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>header<sp/>values<sp/>(user<sp/>header<sp/>length<sp/>already<sp/>set<sp/>above)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setEntries(<ref refid="d2/d7a/classevio_1_1_record_output_1ab6c620b4efec082e1a94e8e32794578d" kindref="member">eventCount</ref>);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setDataLength(<ref refid="d2/d7a/classevio_1_1_record_output_1ae906482126a5dfdd1cbfcf1ecb93535b" kindref="member">eventSize</ref>);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;setIndexLength(<ref refid="d2/d7a/classevio_1_1_record_output_1aa98ea7b099108a9c85b86edf26ac43ba" kindref="member">indexSize</ref>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>back<sp/>and<sp/>write<sp/>header<sp/>into<sp/>destination<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;writeHeader(<ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>,<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="d0/d0b/classevio_1_1_evio_exception" kindref="compound">EvioException</ref><sp/>&amp;<sp/>e)<sp/>{</highlight><highlight class="comment">/*<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>ready<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d7a/classevio_1_1_record_output_1aa86ac9bc20793c5731b0faa759f923d3" kindref="member">recordBinary</ref>-&gt;limit(<ref refid="d2/d7a/classevio_1_1_record_output_1a8b3dde2575a40d0b4e2c56a94b1cb3b4" kindref="member">startingPosition</ref><sp/>+<sp/><ref refid="d2/d7a/classevio_1_1_record_output_1acd299afe38e9276c82339a3a3a931484" kindref="member">header</ref>-&gt;getLength()).position(0);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/libsrc/RecordOutput.cpp"/>
  </compounddef>
</doxygen>
