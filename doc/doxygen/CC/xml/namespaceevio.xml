<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="namespaceevio" kind="namespace" language="C++">
    <compoundname>evio</compoundname>
    <innerclass refid="classevio_1_1_bank_header" prot="public">evio::BankHeader</innerclass>
    <innerclass refid="classevio_1_1_base_structure" prot="public">evio::BaseStructure</innerclass>
    <innerclass refid="classevio_1_1_base_structure_header" prot="public">evio::BaseStructureHeader</innerclass>
    <innerclass refid="classevio_1_1_block_header_v2" prot="public">evio::BlockHeaderV2</innerclass>
    <innerclass refid="classevio_1_1_block_header_v4" prot="public">evio::BlockHeaderV4</innerclass>
    <innerclass refid="classevio_1_1_byte_buffer" prot="public">evio::ByteBuffer</innerclass>
    <innerclass refid="classevio_1_1_byte_order" prot="public">evio::ByteOrder</innerclass>
    <innerclass refid="classevio_1_1_compact_event_builder" prot="public">evio::CompactEventBuilder</innerclass>
    <innerclass refid="classevio_1_1_composite_data" prot="public">evio::CompositeData</innerclass>
    <innerclass refid="classevio_1_1_compressor" prot="public">evio::Compressor</innerclass>
    <innerclass refid="classevio_1_1_data_type" prot="public">evio::DataType</innerclass>
    <innerclass refid="classevio_1_1_event_builder" prot="public">evio::EventBuilder</innerclass>
    <innerclass refid="classevio_1_1_event_header_parser" prot="public">evio::EventHeaderParser</innerclass>
    <innerclass refid="classevio_1_1_event_parser" prot="public">evio::EventParser</innerclass>
    <innerclass refid="classevio_1_1_event_writer" prot="public">evio::EventWriter</innerclass>
    <innerclass refid="classevio_1_1_evio_bank" prot="public">evio::EvioBank</innerclass>
    <innerclass refid="classevio_1_1_evio_compact_reader" prot="public">evio::EvioCompactReader</innerclass>
    <innerclass refid="classevio_1_1_evio_compact_reader_v4" prot="public">evio::EvioCompactReaderV4</innerclass>
    <innerclass refid="classevio_1_1_evio_compact_reader_v6" prot="public">evio::EvioCompactReaderV6</innerclass>
    <innerclass refid="classevio_1_1_evio_dictionary_entry" prot="public">evio::EvioDictionaryEntry</innerclass>
    <innerclass refid="classevio_1_1_evio_event" prot="public">evio::EvioEvent</innerclass>
    <innerclass refid="classevio_1_1_evio_exception" prot="public">evio::EvioException</innerclass>
    <innerclass refid="classevio_1_1_evio_node" prot="public">evio::EvioNode</innerclass>
    <innerclass refid="classevio_1_1_evio_reader" prot="public">evio::EvioReader</innerclass>
    <innerclass refid="classevio_1_1_evio_reader_v4" prot="public">evio::EvioReaderV4</innerclass>
    <innerclass refid="classevio_1_1_evio_reader_v6" prot="public">evio::EvioReaderV6</innerclass>
    <innerclass refid="classevio_1_1_evio_segment" prot="public">evio::EvioSegment</innerclass>
    <innerclass refid="classevio_1_1_evio_swap" prot="public">evio::EvioSwap</innerclass>
    <innerclass refid="classevio_1_1_evio_tag_segment" prot="public">evio::EvioTagSegment</innerclass>
    <innerclass refid="classevio_1_1_evio_x_m_l_dictionary" prot="public">evio::EvioXMLDictionary</innerclass>
    <innerclass refid="classevio_1_1_file_event_index" prot="public">evio::FileEventIndex</innerclass>
    <innerclass refid="classevio_1_1_file_header" prot="public">evio::FileHeader</innerclass>
    <innerclass refid="classevio_1_1_header_type" prot="public">evio::HeaderType</innerclass>
    <innerclass refid="classevio_1_1_i_block_header" prot="public">evio::IBlockHeader</innerclass>
    <innerclass refid="classevio_1_1_i_evio_compact_reader" prot="public">evio::IEvioCompactReader</innerclass>
    <innerclass refid="classevio_1_1_i_evio_filter" prot="public">evio::IEvioFilter</innerclass>
    <innerclass refid="classevio_1_1_i_evio_listener" prot="public">evio::IEvioListener</innerclass>
    <innerclass refid="classevio_1_1_i_evio_reader" prot="public">evio::IEvioReader</innerclass>
    <innerclass refid="classevio_1_1node_breadth_iterator" prot="public">evio::nodeBreadthIterator</innerclass>
    <innerclass refid="classevio_1_1node_iterator" prot="public">evio::nodeIterator</innerclass>
    <innerclass refid="classevio_1_1_reader" prot="public">evio::Reader</innerclass>
    <innerclass refid="classevio_1_1_record_compressor" prot="public">evio::RecordCompressor</innerclass>
    <innerclass refid="classevio_1_1_record_header" prot="public">evio::RecordHeader</innerclass>
    <innerclass refid="classevio_1_1_record_input" prot="public">evio::RecordInput</innerclass>
    <innerclass refid="classevio_1_1_record_node" prot="public">evio::RecordNode</innerclass>
    <innerclass refid="classevio_1_1_record_output" prot="public">evio::RecordOutput</innerclass>
    <innerclass refid="classevio_1_1_record_ring_item" prot="public">evio::RecordRingItem</innerclass>
    <innerclass refid="classevio_1_1_record_supply" prot="public">evio::RecordSupply</innerclass>
    <innerclass refid="classevio_1_1_segment_header" prot="public">evio::SegmentHeader</innerclass>
    <innerclass refid="classevio_1_1_structure_finder" prot="public">evio::StructureFinder</innerclass>
    <innerclass refid="classevio_1_1_structure_transformer" prot="public">evio::StructureTransformer</innerclass>
    <innerclass refid="classevio_1_1_structure_type" prot="public">evio::StructureType</innerclass>
    <innerclass refid="classevio_1_1_tag_segment_header" prot="public">evio::TagSegmentHeader</innerclass>
    <innerclass refid="classevio_1_1_util" prot="public">evio::Util</innerclass>
    <innerclass refid="classevio_1_1_writer" prot="public">evio::Writer</innerclass>
    <innerclass refid="classevio_1_1_writer_m_t" prot="public">evio::WriterMT</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceevio_1a7cbb35fc00e6b99839c986314900dc06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void evio::null_deleter</definition>
        <argsstring>(uint8_t *)</argsstring>
        <name>null_deleter</name>
        <param>
          <type>uint8_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/ByteBuffer.cpp" line="18" column="10" bodyfile="src/libsrc/ByteBuffer.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2019, Jefferson Science Associates</para>
<para>Thomas Jefferson National Accelerator Facility Data Acquisition Group</para>
<para>12000, Jefferson Ave, Newport News, VA 23606 Phone : (757)-269-7100</para>
<para><simplesect kind="date"><para>04/29/2019 </para>
</simplesect>
<simplesect kind="author"><para>timmer</para>
</simplesect>
Copyright (c) 2019, Jefferson Science Associates</para>
<para>Thomas Jefferson National Accelerator Facility Data Acquisition Group</para>
<para>12000, Jefferson Ave, Newport News, VA 23606 Phone : (757)-269-7100</para>
<para><simplesect kind="date"><para>04/09/2019 </para>
</simplesect>
<simplesect kind="author"><para>timmer </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/libsrc/BankHeader.cpp" line="14" column="1"/>
  </compounddef>
</doxygen>
