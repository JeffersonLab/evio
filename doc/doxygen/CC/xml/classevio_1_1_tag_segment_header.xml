<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classevio_1_1_tag_segment_header" kind="class" language="C++" prot="public">
    <compoundname>evio::TagSegmentHeader</compoundname>
    <basecompoundref refid="classevio_1_1_base_structure_header" prot="public" virt="non-virtual">evio::BaseStructureHeader</basecompoundref>
    <includes refid="_tag_segment_header_8h" local="no">TagSegmentHeader.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1ab03614af48a56c3f9269b0c798c69840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>evio::TagSegmentHeader::TagSegmentHeader</definition>
        <argsstring>()=default</argsstring>
        <name>TagSegmentHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="40" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a0c24096f3323c9df2d88acdce0ecec49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>evio::TagSegmentHeader::TagSegmentHeader</definition>
        <argsstring>(uint16_t tag, DataType const &amp;dataType)</argsstring>
        <name>TagSegmentHeader</name>
        <param>
          <type>uint16_t</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="classevio_1_1_data_type" kindref="compound">DataType</ref> const &amp;</type>
          <declname>dataType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag for the tagsegment header. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataType</parametername>
</parameternamelist>
<parameterdescription>
<para>the data type for the content of the tagsegment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="41" column="9" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="21" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a2a8a8430edafaf5858b86ea6f6e9815d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>evio::TagSegmentHeader::TagSegmentHeader</definition>
        <argsstring>(uint16_t tag, std::string const &amp;format)</argsstring>
        <name>TagSegmentHeader</name>
        <param>
          <type>uint16_t</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>format</declname>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor for a string data type holding the single string given. Used in <ref refid="classevio_1_1_composite_data" kindref="compound">CompositeData</ref> class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>the tag for the tagsegment header. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>data type for the content of the tagsegment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="42" column="9" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a051d8b1070adc5662e610234d5cd9f15" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t evio::TagSegmentHeader::getDataLength</definition>
        <argsstring>() override</argsstring>
        <name>getDataLength</name>
        <reimplements refid="classevio_1_1_base_structure_header_1a59dfbf2e4dea4a32bc63e4025304d626">getDataLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the length of the structure&apos;s data in 32 bit ints (not counting the header words). <simplesect kind="return"><para>Get the length of the structure&apos;s data in 32 bit ints (not counting the header words). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="44" column="18" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a6c47ba93744755a57729b6980bd7fd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t evio::TagSegmentHeader::getHeaderLength</definition>
        <argsstring>() override</argsstring>
        <name>getHeaderLength</name>
        <reimplements refid="classevio_1_1_base_structure_header_1a11c3bab4b4b99bbc3103b3ae038f0c4c">getHeaderLength</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the length of the structure&apos;s header in ints. This includes the first header word itself (which contains the length) and in the case of banks, it also includes the second header word. <simplesect kind="return"><para>Get the length of the structure&apos;s header in ints. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="45" column="18" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a22a99b547180f3c9aca1a8a5b39130b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string evio::TagSegmentHeader::toString</definition>
        <argsstring>() override</argsstring>
        <name>toString</name>
        <reimplements refid="classevio_1_1_base_structure_header_1a24fb7da871e684ba89885339cb671cdb">toString</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain a string representation of the tagsegment header. <simplesect kind="return"><para>a string representation of the tagsegment header. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="46" column="23" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="97" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a3f90ca5280e86a180c36d7f80faa764f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t evio::TagSegmentHeader::write</definition>
        <argsstring>(std::shared_ptr&lt; ByteBuffer &gt; &amp;dest) override</argsstring>
        <name>write</name>
        <reimplements refid="classevio_1_1_base_structure_header_1a6bbf5d5ec94c160022abfc6fb0cc4dbb">write</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classevio_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &gt; &amp;</type>
          <declname>dest</declname>
          <defname>byteBuffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write myself out a byte buffer. This write is relative - i.e., it uses the current position of the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byteBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the byteBuffer to write to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written, which for a <ref refid="classevio_1_1_tag_segment_header" kindref="compound">TagSegmentHeader</ref> is 4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="48" column="16" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1a568da7b8bcb84a881663712e46ceb682" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t evio::TagSegmentHeader::write</definition>
        <argsstring>(ByteBuffer &amp;dest) override</argsstring>
        <name>write</name>
        <reimplements refid="classevio_1_1_base_structure_header_1ae045706ed8b20dcb5619a7e4e273de95">write</reimplements>
        <param>
          <type><ref refid="classevio_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>dest</declname>
          <defname>byteBuffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write myself out a byte buffer. This write is relative - i.e., it uses the current position of the buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byteBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the byteBuffer to write to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written, which for a <ref refid="classevio_1_1_tag_segment_header" kindref="compound">TagSegmentHeader</ref> is 4. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="49" column="16" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classevio_1_1_tag_segment_header_1aa792a400774c62abced5d451affb49e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t evio::TagSegmentHeader::write</definition>
        <argsstring>(uint8_t *dest, ByteOrder const &amp;order) override</argsstring>
        <name>write</name>
        <reimplements refid="classevio_1_1_base_structure_header_1a6da9aafb8616bf9e2ff26334ee2f9c32">write</reimplements>
        <param>
          <type>uint8_t *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="classevio_1_1_byte_order" kindref="compound">ByteOrder</ref> const &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write myself out as evio format data into the given byte array in the specified byte order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>array into which evio data is written (destination). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>order</parametername>
</parameternamelist>
<parameterdescription>
<para>byte order in which to write the data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written, which for a <ref refid="classevio_1_1_tag_segment_header" kindref="compound">TagSegmentHeader</ref> is 4. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classevio_1_1_evio_exception" kindref="compound">EvioException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>if destination array too small to hold data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libsrc/TagSegmentHeader.h" line="50" column="16" bodyfile="src/libsrc/TagSegmentHeader.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This the header for an evio tagsegment structure (<computeroutput><ref refid="classevio_1_1_evio_tag_segment" kindref="compound">EvioTagSegment</ref></computeroutput>). It does not contain the raw data, just the header. Copied from the java class of identical name.</para>
<para><simplesect kind="author"><para>heddle (original Java version) </para>
</simplesect>
<simplesect kind="author"><para>timmer </para>
</simplesect>
<simplesect kind="date"><para>4/27/2020 </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>evio::TagSegmentHeader</label>
        <link refid="classevio_1_1_tag_segment_header"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>evio::BaseStructureHeader</label>
        <link refid="classevio_1_1_base_structure_header"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>evio::TagSegmentHeader</label>
        <link refid="classevio_1_1_tag_segment_header"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>evio::DataType</label>
        <link refid="classevio_1_1_data_type"/>
        <childnode refid="3" relation="usage">
          <edgelabel>ALSOBANK</edgelabel>
          <edgelabel>ALSOSEGMENT</edgelabel>
          <edgelabel>BANK</edgelabel>
          <edgelabel>CHAR8</edgelabel>
          <edgelabel>CHARSTAR8</edgelabel>
          <edgelabel>COMPOSITE</edgelabel>
          <edgelabel>DOUBLE64</edgelabel>
          <edgelabel>FLOAT32</edgelabel>
          <edgelabel>HOLLERIT</edgelabel>
          <edgelabel>INT32</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>evio::BaseStructureHeader</label>
        <link refid="classevio_1_1_base_structure_header"/>
        <childnode refid="3" relation="usage">
          <edgelabel>dataType</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/libsrc/TagSegmentHeader.h" line="36" column="5" bodyfile="src/libsrc/TagSegmentHeader.h" bodystart="36" bodyend="51"/>
    <listofallmembers>
      <member refid="classevio_1_1_base_structure_header_1aa68eb8fdec4bbee85623a01f59762029" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>BaseStructureHeader</name></member>
      <member refid="classevio_1_1_base_structure_header_1a1cc878d3cbdb0c41912fd8976adab3c7" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>BaseStructureHeader</name></member>
      <member refid="classevio_1_1_base_structure_header_1ab77654de79c4807d70223adfdfcd8ee2" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>copy</name></member>
      <member refid="classevio_1_1_base_structure_header_1a6ef44d65bf94ac971d3af915180cec87" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>dataType</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a051d8b1070adc5662e610234d5cd9f15" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>getDataLength</name></member>
      <member refid="classevio_1_1_base_structure_header_1aecc8cfa082206c87607c3e4df64f940d" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getDataType</name></member>
      <member refid="classevio_1_1_base_structure_header_1a20ecfb1490d3928289ce7e90717d797c" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getDataTypeName</name></member>
      <member refid="classevio_1_1_base_structure_header_1a3b1e6ad65be46d90def73436ee2111db" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getDataTypeValue</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a6c47ba93744755a57729b6980bd7fd4e" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>getHeaderLength</name></member>
      <member refid="classevio_1_1_base_structure_header_1a9f5007540f2915806443bd854024af6c" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getLength</name></member>
      <member refid="classevio_1_1_base_structure_header_1abf390e156e46d3a8d69201daadc0e7ba" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getNumber</name></member>
      <member refid="classevio_1_1_base_structure_header_1a6e9817cc47554c10326c65332801dc94" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getPadding</name></member>
      <member refid="classevio_1_1_base_structure_header_1a8010a90a31dac30294919cdaa51597b7" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>getTag</name></member>
      <member refid="classevio_1_1_base_structure_header_1a2fe8b4dabff88791e9363b53e094eff6" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>length</name></member>
      <member refid="classevio_1_1_base_structure_header_1a770f7ab1ceaacffe9eace5ef54405df5" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>number</name></member>
      <member refid="classevio_1_1_base_structure_header_1a2b3d1f2e583a41bc6c0ab63e4357e71d" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>padding</name></member>
      <member refid="classevio_1_1_base_structure_header_1ae745d3d6f9ab46be096ac75c33bf0cc8" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setDataType</name></member>
      <member refid="classevio_1_1_base_structure_header_1ab3ceb3c0ca87a8bf063d7b6974606378" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setDataType</name></member>
      <member refid="classevio_1_1_base_structure_header_1a20e880aa4230fe086a828d289a4b7f81" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setLength</name></member>
      <member refid="classevio_1_1_base_structure_header_1a191413db85fdf73b284fbf9c36392b20" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setNumber</name></member>
      <member refid="classevio_1_1_base_structure_header_1a269b50c10f9736aab6fd8849f308457a" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setPadding</name></member>
      <member refid="classevio_1_1_base_structure_header_1a0fd8e371d474551b449786da20b65df5" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>setTag</name></member>
      <member refid="classevio_1_1_base_structure_header_1ab36376130d64dd1d8d5c39cf18670c9d" prot="protected" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>tag</name></member>
      <member refid="classevio_1_1_tag_segment_header_1ab03614af48a56c3f9269b0c798c69840" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>TagSegmentHeader</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a0c24096f3323c9df2d88acdce0ecec49" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>TagSegmentHeader</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a2a8a8430edafaf5858b86ea6f6e9815d" prot="public" virt="non-virtual"><scope>evio::TagSegmentHeader</scope><name>TagSegmentHeader</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a22a99b547180f3c9aca1a8a5b39130b0" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>toString</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a3f90ca5280e86a180c36d7f80faa764f" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>write</name></member>
      <member refid="classevio_1_1_tag_segment_header_1a568da7b8bcb84a881663712e46ceb682" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>write</name></member>
      <member refid="classevio_1_1_tag_segment_header_1aa792a400774c62abced5d451affb49e0" prot="public" virt="virtual"><scope>evio::TagSegmentHeader</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
