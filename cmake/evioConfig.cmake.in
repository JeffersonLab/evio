@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Find dependencies if we're using the C++ version
if(NOT DEFINED C_ONLY)
    find_dependency(Boost REQUIRED COMPONENTS system thread chrono filesystem)

    # LZ4 dependency
    find_path(LZ4_INCLUDE_DIR NAMES lz4.h)
    find_library(LZ4_LIBRARY NAMES lz4 liblz4)

    if(NOT LZ4_INCLUDE_DIR OR NOT LZ4_LIBRARY)
        message(FATAL_ERROR "LZ4 library required for eviocc not found")
    endif()

    # Handle disruptor differently based on how evio was built
    if(@USE_EXTERNAL_DISRUPTOR@)
        # If evio was built with external disruptor, users need to provide it
        set(DISRUPTOR_INCLUDE_DIR "@DISRUPTOR_INCLUDE_DIR@")
        set(DISRUPTOR_LIBRARY "@DISRUPTOR_LIBRARY@")

        if(NOT EXISTS "${DISRUPTOR_INCLUDE_DIR}" OR NOT EXISTS "${DISRUPTOR_LIBRARY}")
            message(WARNING "evio was built with external Disruptor, but the path is not valid on this system.")
            message(WARNING "You may need to set DISRUPTOR_CPP_HOME environment variable.")
        endif()
    else()
        # If evio was built with FetchContent, we make no assumptions
        message(STATUS "evio was built with integrated Disruptor. You need to provide Disruptor separately.")
    endif()
endif()

# Include the targets file
include("${CMAKE_CURRENT_LIST_DIR}/evioTargets.cmake")

# Define convenient aliases
set(EVIO_LIBRARIES evio::evio)
if(TARGET evio::eviocc)
    list(APPEND EVIO_LIBRARIES evio::eviocc)
endif()

check_required_components(evio)