#########################
# EVIO SOFTWARE PACKAGE #
#########################

EVIO stands for EVent Input/Output and contains libraries which read & write
data in it own unique format. It was created by the Data Acquisition (DAQ) group
and is now maintained by the Experimental Physics Software and Computing Infrastructure
(EPSCI) group at Thomas Jefferson National Accelerator Facility
(Jefferson Lab). It was originally used in the online DAQ as part of the
CODA software, but is now being used offline and in other applications as
well.

There is a C library as well as an independent C++ library which
is a port from the Java version. There are a few utility programs included.
The Java version is a library with an extensive, user-friendly
interface. There is an additional package containing a GUI for looking at
evio format data at the byte level.

If you only plan to run C/C++ applications you can skip the Java
installation. If you only plan to use Java applications you can
you can skip the C/C++ installation.

#############################
1) Getting & Installing evio
############################

Evio is hosted on github. The most current version, 6.0, is on the evio-6.0 branch.
To acquire all of evio, do:
   git clone https://github.com/JeffersonLab/evio.git
This will give you a full evio distribution with the top level
directory being evio-6.0.

The evio package, including documentation, can be also be accessed on the
JLab Data Acquisition Group CODA wiki at http://coda.jlab.org. But that
ultimately directs one to github.

Note that for C/C++, only Linux and Darwin (Mac OSX)
operating systems are supported. VxWorks is no longer supported.

##############
2) C/C++ code
#############

To make the C and C++ libraries, read the instructions contained in Chapter 2
of the User's Guide in the <top>/doc/users_guide directory.

##############
3) JAVA
##############

To make the Java jar file, read the instructions contained in Chapter 2
of the User's Guide in the <top>/doc/users_guide directory.

Alternatively, there are 2 pre-build jar files that come with the
downloaded package. One jar is compiled with Java 8 and the
other with Java 15.

#################
4) Documentation
#################

All documentation is available from http://coda.jlab.org.
Just click on the "Event IO (evio)" item on the lefthand menu.

However, if using the downloaded distribution, some of the documentation
needs to be generated and some already exists. For existing docs, look in
doc/users_guide for pdf and Microsoft Word format documents.

Some of the documentation is in the source code itself and must be generated
and placed into its own directory.
The java code is documented with, of course, javadoc and the C/C++ code is
documented with doxygen comments (identical to javadoc comments).

To generate all the these docs, from the top level directory type:
    "scons doc"
To remove it all type:
    "scons undoc"

The javadoc is placed in the doc/javadoc directory.
The doxygen docs for C code are placed in the doc/doxygen/C/html directory,
and the doxygen docs for C++ code are placed in the doc/doxygen/CC/html directory.
To view the html documentation, just point your browser to the index.html
file in each of those directories.

Alternatively, just the java documentation can be generated by typing
    "ant javadoc"
for user-level documentation, or
    "ant developdoc"
for developer-level documentation. To remove it:
    "ant undoc"


###############
5) Copyright
###############

For any issues regarding use and copyright, read the LICENSE.txt file.

