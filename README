evio Software Package

Evio stands for event input/output. It is mainly a C
library which reads and writes data in it own unique format.
The C++ library is a wrapper around the C library.
There are a few utility programs included.


1) Getting & Installing evio

The evio package, including documentation, can be found on the
JLab Data Acquisition Group CODA wiki at http://coda.jlab.org.

To install all of evio, download the evio-4.x.tar.gz
file (or whatever version happens to be current) and untar it.
This will give you a full evio distribution with the top level
directory being evio-4.x. The documentation, is available on the
above-mentioned web site but also exists in the doc subdirectory
of the full distribution.

Note that for C/C++, only Linux, Solaris, and Darwin (Mac OSX)
operating systems are supported. The libraries and executables
are placed into the $CODA/<arch>/lib and bin subdirectories
(eg. ...Linux-x86_64/lib).  Be sure to change your LD_LIBRARY_PATH
environmental variable to include the correct lib directory.


2) C/C++ code

Compiling using SCons (make is no longer supported)

From the SCons website:
"SCons is an Open Source software
construction tool -- that is, a next-generation build tool.
Think of SCons as an improved, cross-platform substitute for
the classic Make utility with integrated functionality similar
to autoconf/automake and compiler caches such as ccache. In short,
SCons is an easier, more reliable and faster way to build software."

SCons is written in python, thus to use this build system with evio,
both python and SCons packages need previous installation. If your
system does not have one or the other, go to the http://www.python.org/
and http://www.scons.org/ websites for downloading.

The SCons files needed for compiling are already included as part of
the evio distribution. To compile, the user needs merely to run "scons"
in the top level evio directory. To compile and install libraries and
header files, first define the CODA environmental variable containing
the directory in which to install things and then run "scons install".

The following is a table of SCons compilation options:

scons -h              print out help
scons -c              remove all generated files

scons install         make C and C++ library code;
                      place libraries in architecture-specific lib directory
                      place binaries in architecture-specific bin directory
                      directory and headers in an include directory

scons -c install      uninstall libs, headers, and binaries

scons tar             create a tar file (evio-4.x.tgz) of the evio top level
                      directory and put in ./tar directory

scons doc             generate html documentation from doxygen
                      comments in the source code and put in ./doc directory

scons undoc           remove the doc/doxygen/C & CC
                      directories with all the generated documentation

scons --dbg           compile with debug flag
scons --32bits        compile 32bit libraries & executables on 64bit system
scons --vx5.5         cross compile for vxworks version 5.5
scons --vx6.0         cross compile for vxworks version 6.0

scons --prefix=<dir>  use base directory <dir> when doing install.
                      Defaults to CODA environmental variable.
                      Libs go in <dir>/<arch>/lib, headers in <dir>/<arch>/include
                      and executables in <dir>/<arch>/bin

scons --incdir=<dir>  copy header files to directory <dir> when doing install
                      (takes precedence over --prefix or default location)

scons --libdir=<dir>  copy library files to directory <dir> when doing install
                      (takes precedence over --prefix or default location)

scons --bindir=<dir>  copy executable files to directory <dir> when doing install
                      (takes precedence over --prefix or default location)



You can see these options by running "scons -h"


Note that currently only Linux, Solaris, and Darwin (Mac OSX)
operating systems are fully supported. The libraries and executables
are placed into the $CODA/<arch>/lib and bin subdirectories
(eg. ...Linux-x86_64/lib).  Be sure to change your LD_LIBRARY_PATH
environmental variable to include the correct lib directory.

All libraries and a limited set of executables are also supported for
vxworks versions 5.5 and 6.0 .


4) Documentation

All documentation is available from http://coda.jlab.org.

However, if using the downloaded distribution, some of the documentation
needs to be generated and some already exists. For existing docs look in
doc/users_guide for pdf and Microsoft Word format documents.

Some of the documentation is in the source code itself and must be generated
and placed into its own directory.
The C/C++ code is documented with doxygen comments (identical to javadoc comments).

To generate all the these docs, from the top level directory type:
    "scons doc"
To remove it all type:
    "scons undoc"

The doxygen docs for C code are placed in the doc/doxygen/C/html directory,
and the doxygen docs for C++ code are placed in the doc/doxygen/CC/html directory.
To view the html documentation, just point your browser to the index.html
file in each of those directories.


5) Problems

Carl Timmer - timmer@jlab.org


6) Copyright

For any issues regarding use and copyright, read the NOTICE file.

